
****************************
Benchmarking Stalin on Mon 30 May 02:59:10 CEST 2016 under Linux nexion 4.5.4-1-ARCH #1 SMP PREEMPT Wed May 11 22:21:28 CEST 2016 x86_64 GNU/Linux

Testing browse under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 17965 expressions
    17 internal symbol types
     1 external symbol type
    63 primitive procedure types
   170 non-called native procedure types
   444 called noop native procedure types
  1101 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     5 string types
   187 structure types
    12 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 20668 type sets
   692 hunoz variables
  1624 non-hunoz variables
   531 noop environments
  1708 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 30949 expressions
    17 internal symbol types
     1 external symbol type
    63 primitive procedure types
   207 non-called native procedure types
   682 called noop native procedure types
  2141 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    15 string types
   202 structure types
    12 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 35553 type sets
   957 hunoz variables
  3651 non-hunoz variables
   776 noop environments
  3377 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 168
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 22763 expressions
    17 internal symbol types
     1 external symbol type
    63 primitive procedure types
   170 non-called native procedure types
   682 called noop native procedure types
  2141 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    15 string types
   202 structure types
    12 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 26672 type sets
   832 hunoz variables
  3081 non-hunoz variables
     0 noop environments
  2560 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 168
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W35390 is general case for the following reasons:
  flonum
W31847 is general case for the following reasons:
  nondegenerate nonheaded vector
W27440 is general case for the following reasons:
  flonum
W19765 is general case for the following reasons:
  flonum
W19764 is general case for the following reasons:
  flonum
W19747 is general case for the following reasons:
  flonum
W19336 is general case for the following reasons:
  flonum
W19303 is general case for the following reasons:
  flonum
W19302 is general case for the following reasons:
  flonum
W19301 is general case for the following reasons:
  flonum
W17577 is general case for the following reasons:
  flonum
W17531 is general case for the following reasons:
  flonum
W17419 is general case for the following reasons:
  flonum
W17349 is general case for the following reasons:
  flonum
W17156 is general case for the following reasons:
  flonum
W14459 is general case for the following reasons:
  flonum
W11711 is general case for the following reasons:
  flonum
W11709 is general case for the following reasons:
  flonum
W11703 is general case for the following reasons:
  flonum
W1437 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
Generating code
In read[1108]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  0% - Expanding macros
     0 -  1% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  0% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     3 -  7% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
    11 - 30% - Determining which call sites to split
     0 -  0% - Computing call graph
     1 -  2% - Determining which environments are called more than once
     0 -  0% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     2 -  5% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     1 -  1% - Determining which environments are recursive
     1 -  4% - Determining which environments are reentrant
     0 -  1% - Asserting uniqueness
     6 - 15% - Performing lightweight closure conversion
     4 - 10% - Determining parents
     0 -  1% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     1 -  2% - Determining which environments have external continuation calls
     1 -  4% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     3 -  7% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     0 -  1% - Generating code
     0 -  0% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  0% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running browse:2000
Elapsed time: 1.03000000002793967723846435546875 seconds (1.0300000000000000266453525910037569701671600341796875) for browse:2000
+!CSVLINE!+stalin-unknown,browse:2000,1.03000000002793967723846435546875

real	0m1.039s
user	0m1.040s
sys	0m0.000s

Testing deriv under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 16992 expressions
    15 internal symbol types
     1 external symbol type
    62 primitive procedure types
   173 non-called native procedure types
   384 called noop native procedure types
   754 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   133 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19453 type sets
   640 hunoz variables
  1543 non-hunoz variables
   492 noop environments
  1606 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 26055 expressions
    15 internal symbol types
     1 external symbol type
    62 primitive procedure types
   174 non-called native procedure types
   540 called noop native procedure types
  1468 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   138 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29700 type sets
   816 hunoz variables
  2841 non-hunoz variables
   648 noop environments
  2793 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 112
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 16373 expressions
    15 internal symbol types
     1 external symbol type
    62 primitive procedure types
   173 non-called native procedure types
   540 called noop native procedure types
  1468 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   138 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19186 type sets
   644 hunoz variables
  2181 non-hunoz variables
     0 noop environments
  1768 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 112
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29569 is general case for the following reasons:
  flonum
W26460 is general case for the following reasons:
  nondegenerate nonheaded vector
W25042 is general case for the following reasons:
  flonum
W16033 is general case for the following reasons:
  flonum
W16032 is general case for the following reasons:
  flonum
W16015 is general case for the following reasons:
  flonum
W15604 is general case for the following reasons:
  flonum
W15571 is general case for the following reasons:
  flonum
W15570 is general case for the following reasons:
  flonum
W15569 is general case for the following reasons:
  flonum
W13845 is general case for the following reasons:
  flonum
W13837 is general case for the following reasons:
  flonum
W13799 is general case for the following reasons:
  flonum
W13797 is general case for the following reasons:
  flonum
W13440 is general case for the following reasons:
  flonum
W13424 is general case for the following reasons:
  flonum
W1236 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
Generating code
In read[963]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     2 - 10% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     5 - 26% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  2% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  5% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  1% - Determining which environments are recursive
     1 -  4% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     2 - 12% - Performing lightweight closure conversion
     1 -  6% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     1 -  3% - Determining which environments have external continuation calls
     1 -  5% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  7% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  2% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     1 -  4% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  0% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running deriv:10000000
Elapsed time: 1.458999999996740459806687795207835733890533447265625e1 seconds (1.459000000000000074606987254810519516468048095703125e1) for deriv:10000000
+!CSVLINE!+stalin-unknown,deriv:10000000,1.458999999996740459806687795207835733890533447265625e1

real	0m14.599s
user	0m18.997s
sys	0m0.970s

Testing destruc under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 17239 expressions
    12 internal symbol types
     1 external symbol type
    64 primitive procedure types
   177 non-called native procedure types
   397 called noop native procedure types
   790 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   125 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19733 type sets
   660 hunoz variables
  1572 non-hunoz variables
   508 noop environments
  1656 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 26291 expressions
    12 internal symbol types
     1 external symbol type
    64 primitive procedure types
   178 non-called native procedure types
   552 called noop native procedure types
  1502 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   129 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29961 type sets
   835 hunoz variables
  2858 non-hunoz variables
   663 noop environments
  2839 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 112
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 16492 expressions
    12 internal symbol types
     1 external symbol type
    64 primitive procedure types
   177 non-called native procedure types
   552 called noop native procedure types
  1502 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   129 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19314 type sets
   660 hunoz variables
  2185 non-hunoz variables
     0 noop environments
  1795 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 112
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29808 is general case for the following reasons:
  flonum
W26650 is general case for the following reasons:
  nondegenerate nonheaded vector
W16019 is general case for the following reasons:
  flonum
W16018 is general case for the following reasons:
  flonum
W16001 is general case for the following reasons:
  flonum
W15590 is general case for the following reasons:
  flonum
W15557 is general case for the following reasons:
  flonum
W15556 is general case for the following reasons:
  flonum
W15555 is general case for the following reasons:
  flonum
W13831 is general case for the following reasons:
  flonum
W13823 is general case for the following reasons:
  flonum
W13785 is general case for the following reasons:
  flonum
W13783 is general case for the following reasons:
  flonum
W13410 is general case for the following reasons:
  flonum
W1256 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
Generating code
In read[1033]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  1% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     1 -  9% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     4 - 24% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  3% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  6% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  2% - Determining which environments are recursive
     1 -  4% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     3 - 16% - Performing lightweight closure conversion
     1 -  5% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     0 -  2% - Determining which environments have external continuation calls
     1 -  5% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  8% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     0 -  3% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running destruc:600:50:4000
Elapsed time: 7.900000000023283064365386962890625 seconds (7.9000000000000003552713678800500929355621337890625) for destruc:600:50:4000
+!CSVLINE!+stalin-unknown,destruc:600:50:4000,7.900000000023283064365386962890625

real	0m7.900s
user	0m9.537s
sys	0m0.280s

Testing diviter under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 16926 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   176 non-called native procedure types
   377 called noop native procedure types
   712 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   124 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19378 type sets
   642 hunoz variables
  1550 non-hunoz variables
   496 noop environments
  1612 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 25774 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   176 non-called native procedure types
   528 called noop native procedure types
  1407 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   128 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29370 type sets
   813 hunoz variables
  2803 non-hunoz variables
   647 noop environments
  2769 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 15698 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   176 non-called native procedure types
   528 called noop native procedure types
  1407 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   128 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 18421 type sets
   624 hunoz variables
  2119 non-hunoz variables
     0 noop environments
  1695 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29219 is general case for the following reasons:
  flonum
W26101 is general case for the following reasons:
  nondegenerate nonheaded vector
W15780 is general case for the following reasons:
  flonum
W15779 is general case for the following reasons:
  flonum
W15762 is general case for the following reasons:
  flonum
W15351 is general case for the following reasons:
  flonum
W15318 is general case for the following reasons:
  flonum
W15317 is general case for the following reasons:
  flonum
W15316 is general case for the following reasons:
  flonum
W14549 is general case for the following reasons:
  flonum
W13609 is general case for the following reasons:
  flonum
W13592 is general case for the following reasons:
  flonum
W13546 is general case for the following reasons:
  flonum
W13171 is general case for the following reasons:
  flonum
W1217 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
Generating code
In read[977]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  0% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     2 -  9% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     4 - 21% - Determining which call sites to split
     0 -  0% - Computing call graph
     1 -  3% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  6% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  2% - Determining which environments are recursive
     1 -  5% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     3 - 15% - Performing lightweight closure conversion
     1 -  6% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     1 -  3% - Determining which environments have external continuation calls
     1 -  5% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  7% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     1 -  4% - Generating code
     0 -  1% - Removing unused declarations
     0 -  1% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running diviter:1000:1000000
Elapsed time: 1.3670000000041910848125326083390973508358001708984375e1 seconds (1.36699999999999999289457264239899814128875732421875e1) for diviter:1000:1000000
+!CSVLINE!+stalin-unknown,diviter:1000:1000000,1.3670000000041910848125326083390973508358001708984375e1

real	0m13.674s
user	0m18.117s
sys	0m1.053s

Testing divrec under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 16904 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   176 non-called native procedure types
   375 called noop native procedure types
   707 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   124 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19351 type sets
   640 hunoz variables
  1547 non-hunoz variables
   494 noop environments
  1607 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 25752 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   176 non-called native procedure types
   526 called noop native procedure types
  1402 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   128 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29343 type sets
   811 hunoz variables
  2800 non-hunoz variables
   645 noop environments
  2764 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 15677 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   176 non-called native procedure types
   526 called noop native procedure types
  1402 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   128 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 18395 type sets
   622 hunoz variables
  2116 non-hunoz variables
     0 noop environments
  1690 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29192 is general case for the following reasons:
  flonum
W26079 is general case for the following reasons:
  nondegenerate nonheaded vector
W15780 is general case for the following reasons:
  flonum
W15779 is general case for the following reasons:
  flonum
W15762 is general case for the following reasons:
  flonum
W15351 is general case for the following reasons:
  flonum
W15318 is general case for the following reasons:
  flonum
W15317 is general case for the following reasons:
  flonum
W15316 is general case for the following reasons:
  flonum
W14549 is general case for the following reasons:
  flonum
W13609 is general case for the following reasons:
  flonum
W13592 is general case for the following reasons:
  flonum
W13546 is general case for the following reasons:
  flonum
W13171 is general case for the following reasons:
  flonum
W1217 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
Generating code
In read[970]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     2 -  9% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     3 - 16% - Determining which call sites to split
     0 -  0% - Computing call graph
     1 -  3% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  7% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  2% - Determining which environments are recursive
     1 -  6% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     3 - 16% - Performing lightweight closure conversion
     1 -  7% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     1 -  3% - Determining which environments have external continuation calls
     1 -  5% - Determining blocked environments
     0 -  2% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  7% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     1 -  3% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running divrec:1000:1000000
Elapsed time: 1.54799999999813753248645298299379646778106689453125e1 seconds (1.5480000000000000426325641456060111522674560546875e1) for divrec:1000:1000000
+!CSVLINE!+stalin-unknown,divrec:1000:1000000,1.54799999999813753248645298299379646778106689453125e1

real	0m15.487s
user	0m20.137s
sys	0m1.077s

Testing puzzle under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 17897 expressions
    12 internal symbol types
     1 external symbol type
    61 primitive procedure types
   176 non-called native procedure types
   425 called noop native procedure types
   806 called non-noop native procedure types
     0 foreign procedure types
     1 continuation type
     4 string types
   123 structure types
    17 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 20496 type sets
   722 hunoz variables
  1613 non-hunoz variables
   543 noop environments
  1714 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 26725 expressions
    12 internal symbol types
     1 external symbol type
    61 primitive procedure types
   176 non-called native procedure types
   576 called noop native procedure types
  1501 called non-noop native procedure types
     0 foreign procedure types
     1 continuation type
    14 string types
   127 structure types
    17 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 30469 type sets
   893 hunoz variables
  2867 non-hunoz variables
   694 noop environments
  2867 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 16542 expressions
    12 internal symbol types
     1 external symbol type
    61 primitive procedure types
   176 non-called native procedure types
   576 called noop native procedure types
  1501 called non-noop native procedure types
     0 foreign procedure types
     1 continuation type
    14 string types
   127 structure types
    17 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19409 type sets
   698 hunoz variables
  2185 non-hunoz variables
     0 noop environments
  1789 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W30362 is general case for the following reasons:
  flonum
W27093 is general case for the following reasons:
  nondegenerate nonheaded vector
W15902 is general case for the following reasons:
  flonum
W15901 is general case for the following reasons:
  flonum
W15884 is general case for the following reasons:
  flonum
W15473 is general case for the following reasons:
  flonum
W15440 is general case for the following reasons:
  flonum
W15439 is general case for the following reasons:
  flonum
W15438 is general case for the following reasons:
  flonum
W13714 is general case for the following reasons:
  flonum
W13666 is general case for the following reasons:
  flonum
W13293 is general case for the following reasons:
  flonum
W1207 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
Generating code
In read[1126]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  1% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     1 -  8% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     4 - 25% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  3% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  6% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  1% - Determining which environments are recursive
     1 -  4% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     3 - 16% - Performing lightweight closure conversion
     1 -  4% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     0 -  2% - Determining which environments have external continuation calls
     1 -  4% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  8% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     1 -  4% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running puzzle:1000
Elapsed time: 7.90000000153668224811553955078125e-1 seconds (7.9000000000000003552713678800500929355621337890625e-1) for puzzle:1000
+!CSVLINE!+stalin-unknown,puzzle:1000,7.90000000153668224811553955078125e-1

real	0m0.796s
user	0m0.787s
sys	0m0.007s

Testing triangl under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 17348 expressions
    12 internal symbol types
     1 external symbol type
    62 primitive procedure types
   176 non-called native procedure types
   390 called noop native procedure types
   752 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   265 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 20104 type sets
   657 hunoz variables
  1557 non-hunoz variables
   500 noop environments
  1615 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 26535 expressions
    12 internal symbol types
     1 external symbol type
    62 primitive procedure types
   177 non-called native procedure types
   555 called noop native procedure types
  1495 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   269 structure types
    16 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 30507 type sets
   852 hunoz variables
  2860 non-hunoz variables
   665 noop environments
  2820 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 112
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 16845 expressions
    12 internal symbol types
     1 external symbol type
    62 primitive procedure types
   176 non-called native procedure types
   555 called noop native procedure types
  1495 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   269 structure types
    16 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19973 type sets
   678 hunoz variables
  2190 non-hunoz variables
     0 noop environments
  1790 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 112
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W30396 is general case for the following reasons:
  flonum
W26969 is general case for the following reasons:
  nondegenerate nonheaded vector
W16174 is general case for the following reasons:
  flonum
W16173 is general case for the following reasons:
  flonum
W16156 is general case for the following reasons:
  flonum
W15745 is general case for the following reasons:
  flonum
W15712 is general case for the following reasons:
  flonum
W15711 is general case for the following reasons:
  flonum
W15710 is general case for the following reasons:
  flonum
W13986 is general case for the following reasons:
  flonum
W13978 is general case for the following reasons:
  flonum
W13940 is general case for the following reasons:
  flonum
W13938 is general case for the following reasons:
  flonum
W13565 is general case for the following reasons:
  flonum
W1428 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
Generating code
In read[984]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     1 -  8% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     3 - 19% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  2% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     2 -  8% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  1% - Determining which environments are recursive
     1 -  4% - Determining which environments are reentrant
     0 -  2% - Asserting uniqueness
     3 - 19% - Performing lightweight closure conversion
     1 -  4% - Determining parents
     1 -  3% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     0 -  2% - Determining which environments have external continuation calls
     1 -  5% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     2 -  9% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     1 -  3% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  0% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running triangl:22:1:50
Elapsed time: 1.94999999995343387126922607421875 seconds (1.95) for triangl:22:1:50
+!CSVLINE!+stalin-unknown,triangl:22:1:50,1.94999999995343387126922607421875

real	0m1.956s
user	0m1.960s
sys	0m0.003s

Testing tak under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 16905 expressions
    12 internal symbol types
     1 external symbol type
    62 primitive procedure types
   177 non-called native procedure types
   380 called noop native procedure types
   737 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   122 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19345 type sets
   637 hunoz variables
  1547 non-hunoz variables
   491 noop environments
  1604 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 25837 expressions
    12 internal symbol types
     1 external symbol type
    62 primitive procedure types
   178 non-called native procedure types
   535 called noop native procedure types
  1445 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   126 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29453 type sets
   812 hunoz variables
  2830 non-hunoz variables
   646 noop environments
  2769 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 112
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 16117 expressions
    12 internal symbol types
     1 external symbol type
    62 primitive procedure types
   177 non-called native procedure types
   535 called noop native procedure types
  1445 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   126 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 18885 type sets
   637 hunoz variables
  2157 non-hunoz variables
     0 noop environments
  1735 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 112
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29346 is general case for the following reasons:
  flonum
W26236 is general case for the following reasons:
  nondegenerate nonheaded vector
W15900 is general case for the following reasons:
  flonum
W15899 is general case for the following reasons:
  flonum
W15882 is general case for the following reasons:
  flonum
W15471 is general case for the following reasons:
  flonum
W15438 is general case for the following reasons:
  flonum
W15437 is general case for the following reasons:
  flonum
W15436 is general case for the following reasons:
  flonum
W13712 is general case for the following reasons:
  flonum
W13704 is general case for the following reasons:
  flonum
W13666 is general case for the following reasons:
  flonum
W13664 is general case for the following reasons:
  flonum
W13291 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
W25 is general case for the following reasons:
  flonum
Generating code
In read[964]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  1% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     1 - 10% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     3 - 20% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  2% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  6% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  2% - Determining which environments are recursive
     1 -  6% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     2 - 15% - Performing lightweight closure conversion
     1 -  5% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     0 -  2% - Determining which environments have external continuation calls
     1 -  5% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  8% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     0 -  3% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running tak:40:20:11:1
Elapsed time: 5.0 seconds (5.0) for tak:40:20:11:1
+!CSVLINE!+stalin-unknown,tak:40:20:11:1,5.0

real	0m5.008s
user	0m5.000s
sys	0m0.000s

Testing takl under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 16974 expressions
    12 internal symbol types
     1 external symbol type
    62 primitive procedure types
   177 non-called native procedure types
   384 called noop native procedure types
   740 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   123 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19430 type sets
   642 hunoz variables
  1556 non-hunoz variables
   496 noop environments
  1607 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 26106 expressions
    12 internal symbol types
     1 external symbol type
    62 primitive procedure types
   182 non-called native procedure types
   539 called noop native procedure types
  1465 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   127 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29738 type sets
   817 hunoz variables
  2844 non-hunoz variables
   651 noop environments
  2802 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 112
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 16235 expressions
    12 internal symbol types
     1 external symbol type
    62 primitive procedure types
   177 non-called native procedure types
   539 called noop native procedure types
  1465 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   127 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19015 type sets
   641 hunoz variables
  2168 non-hunoz variables
     0 noop environments
  1760 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 112
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29591 is general case for the following reasons:
  flonum
W26465 is general case for the following reasons:
  nondegenerate nonheaded vector
W16063 is general case for the following reasons:
  flonum
W16062 is general case for the following reasons:
  flonum
W16045 is general case for the following reasons:
  flonum
W15634 is general case for the following reasons:
  flonum
W15601 is general case for the following reasons:
  flonum
W15600 is general case for the following reasons:
  flonum
W13867 is general case for the following reasons:
  flonum
W13829 is general case for the following reasons:
  flonum
W13827 is general case for the following reasons:
  flonum
W13454 is general case for the following reasons:
  flonum
W101 is general case for the following reasons:
  flonum
W93 is general case for the following reasons:
  flonum
W85 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
W25 is general case for the following reasons:
  flonum
Generating code
In read[972]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     2 - 11% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     3 - 22% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  2% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  5% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  2% - Determining which environments are recursive
     1 -  5% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     2 - 14% - Performing lightweight closure conversion
     1 -  5% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     0 -  3% - Determining which environments have external continuation calls
     1 -  5% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  8% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     0 -  3% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running takl:40:20:12:1
Elapsed time: 3.36000000010244548320770263671875 seconds (3.359999999999999875655021241982467472553253173828125) for takl:40:20:12:1
+!CSVLINE!+stalin-unknown,takl:40:20:12:1,3.36000000010244548320770263671875

real	0m3.363s
user	0m3.363s
sys	0m0.000s

Testing ntakl under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 16969 expressions
    12 internal symbol types
     1 external symbol type
    62 primitive procedure types
   177 non-called native procedure types
   384 called noop native procedure types
   739 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   123 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19424 type sets
   642 hunoz variables
  1555 non-hunoz variables
   496 noop environments
  1606 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 26101 expressions
    12 internal symbol types
     1 external symbol type
    62 primitive procedure types
   182 non-called native procedure types
   539 called noop native procedure types
  1464 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   127 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29732 type sets
   817 hunoz variables
  2843 non-hunoz variables
   651 noop environments
  2801 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 112
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 16230 expressions
    12 internal symbol types
     1 external symbol type
    62 primitive procedure types
   177 non-called native procedure types
   539 called noop native procedure types
  1464 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   127 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19009 type sets
   641 hunoz variables
  2167 non-hunoz variables
     0 noop environments
  1759 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 112
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29585 is general case for the following reasons:
  flonum
W26460 is general case for the following reasons:
  nondegenerate nonheaded vector
W16062 is general case for the following reasons:
  flonum
W16061 is general case for the following reasons:
  flonum
W16044 is general case for the following reasons:
  flonum
W15633 is general case for the following reasons:
  flonum
W15600 is general case for the following reasons:
  flonum
W15599 is general case for the following reasons:
  flonum
W13866 is general case for the following reasons:
  flonum
W13828 is general case for the following reasons:
  flonum
W13826 is general case for the following reasons:
  flonum
W13453 is general case for the following reasons:
  flonum
W101 is general case for the following reasons:
  flonum
W93 is general case for the following reasons:
  flonum
W85 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
W25 is general case for the following reasons:
  flonum
Generating code
In read[971]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     1 - 10% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     3 - 19% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  3% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  6% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  2% - Determining which environments are recursive
     1 -  5% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     2 - 15% - Performing lightweight closure conversion
     1 -  6% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     0 -  3% - Determining which environments have external continuation calls
     1 -  5% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  9% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     0 -  3% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running ntakl:40:20:12:1
Elapsed time: 2.930000000051222741603851318359375 seconds (2.9300000000000000710542735760100185871124267578125) for ntakl:40:20:12:1
+!CSVLINE!+stalin-unknown,ntakl:40:20:12:1,2.930000000051222741603851318359375

real	0m2.931s
user	0m2.930s
sys	0m0.000s

Testing cpstak under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 16929 expressions
    12 internal symbol types
     1 external symbol type
    62 primitive procedure types
   177 non-called native procedure types
   381 called noop native procedure types
   744 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   122 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19379 type sets
   638 hunoz variables
  1556 non-hunoz variables
   492 noop environments
  1611 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 25861 expressions
    12 internal symbol types
     1 external symbol type
    62 primitive procedure types
   178 non-called native procedure types
   536 called noop native procedure types
  1452 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   126 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29487 type sets
   813 hunoz variables
  2839 non-hunoz variables
   647 noop environments
  2776 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 112
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 16141 expressions
    12 internal symbol types
     1 external symbol type
    62 primitive procedure types
   177 non-called native procedure types
   536 called noop native procedure types
  1452 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   126 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 18919 type sets
   638 hunoz variables
  2166 non-hunoz variables
     0 noop environments
  1742 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 112
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29380 is general case for the following reasons:
  flonum
W26260 is general case for the following reasons:
  nondegenerate nonheaded vector
W15900 is general case for the following reasons:
  flonum
W15899 is general case for the following reasons:
  flonum
W15882 is general case for the following reasons:
  flonum
W15471 is general case for the following reasons:
  flonum
W15438 is general case for the following reasons:
  flonum
W15437 is general case for the following reasons:
  flonum
W15436 is general case for the following reasons:
  flonum
W13712 is general case for the following reasons:
  flonum
W13704 is general case for the following reasons:
  flonum
W13666 is general case for the following reasons:
  flonum
W13664 is general case for the following reasons:
  flonum
W13291 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
W25 is general case for the following reasons:
  flonum
Generating code
In read[972]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  1% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     1 - 10% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     3 - 20% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  3% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  6% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  2% - Determining which environments are recursive
     1 -  5% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     2 - 15% - Performing lightweight closure conversion
     1 -  5% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     0 -  3% - Determining which environments have external continuation calls
     1 -  5% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  9% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     0 -  3% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Too many heap sections: Increase MAXHINCR or MAX_HEAP_SECTS
Running cpstak:40:20:11:1
./bench: line 361: 23464 Aborted                 (core dumped) "$exe" < "$2"

real	0m11.459s
user	0m9.333s
sys	0m2.273s

Testing ctak under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 16936 expressions
    12 internal symbol types
     1 external symbol type
    63 primitive procedure types
   177 non-called native procedure types
   381 called noop native procedure types
   743 called non-noop native procedure types
     0 foreign procedure types
     5 continuation types
     4 string types
   122 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19387 type sets
   638 hunoz variables
  1557 non-hunoz variables
   492 noop environments
  1610 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 25868 expressions
    12 internal symbol types
     1 external symbol type
    63 primitive procedure types
   178 non-called native procedure types
   536 called noop native procedure types
  1451 called non-noop native procedure types
     0 foreign procedure types
     5 continuation types
    14 string types
   126 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29495 type sets
   813 hunoz variables
  2840 non-hunoz variables
   647 noop environments
  2775 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 112
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 16148 expressions
    12 internal symbol types
     1 external symbol type
    63 primitive procedure types
   177 non-called native procedure types
   536 called noop native procedure types
  1451 called non-noop native procedure types
     0 foreign procedure types
     5 continuation types
    14 string types
   126 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 18927 type sets
   638 hunoz variables
  2167 non-hunoz variables
     0 noop environments
  1741 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 112
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29388 is general case for the following reasons:
  flonum
W26267 is general case for the following reasons:
  nondegenerate nonheaded vector
W15905 is general case for the following reasons:
  flonum
W15904 is general case for the following reasons:
  flonum
W15887 is general case for the following reasons:
  flonum
W15476 is general case for the following reasons:
  flonum
W15443 is general case for the following reasons:
  flonum
W15442 is general case for the following reasons:
  flonum
W15441 is general case for the following reasons:
  flonum
W13717 is general case for the following reasons:
  flonum
W13709 is general case for the following reasons:
  flonum
W13671 is general case for the following reasons:
  flonum
W13669 is general case for the following reasons:
  flonum
W13296 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
W25 is general case for the following reasons:
  flonum
Generating code
In read[971]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  1% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     1 - 10% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     3 - 19% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  3% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  6% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  2% - Determining which environments are recursive
     1 -  5% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     2 - 16% - Performing lightweight closure conversion
     1 -  6% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     0 -  3% - Determining which environments have external continuation calls
     1 -  4% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  9% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     1 -  4% - Generating code
     0 -  1% - Removing unused declarations
     0 -  1% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running ctak:32:16:8:1
Elapsed time: 1.08000000007450580596923828125 seconds (1.0800000000000000710542735760100185871124267578125) for ctak:32:16:8:1
+!CSVLINE!+stalin-unknown,ctak:32:16:8:1,1.08000000007450580596923828125

real	0m1.078s
user	0m1.073s
sys	0m0.003s

Testing fib under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 16861 expressions
    12 internal symbol types
     1 external symbol type
    59 primitive procedure types
   179 non-called native procedure types
   371 called noop native procedure types
   677 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   122 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19295 type sets
   637 hunoz variables
  1541 non-hunoz variables
   491 noop environments
  1600 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 25629 expressions
    12 internal symbol types
     1 external symbol type
    59 primitive procedure types
   179 non-called native procedure types
   522 called noop native procedure types
  1370 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   126 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29207 type sets
   808 hunoz variables
  2792 non-hunoz variables
   642 noop environments
  2745 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 15391 expressions
    12 internal symbol types
     1 external symbol type
    59 primitive procedure types
   179 non-called native procedure types
   522 called noop native procedure types
  1370 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   126 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 18075 type sets
   611 hunoz variables
  2095 non-hunoz variables
     0 noop environments
  1656 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29100 is general case for the following reasons:
  flonum
W25996 is general case for the following reasons:
  nondegenerate nonheaded vector
W15740 is general case for the following reasons:
  flonum
W15739 is general case for the following reasons:
  flonum
W15722 is general case for the following reasons:
  flonum
W15311 is general case for the following reasons:
  flonum
W15278 is general case for the following reasons:
  flonum
W15277 is general case for the following reasons:
  flonum
W15276 is general case for the following reasons:
  flonum
W13504 is general case for the following reasons:
  flonum
W13131 is general case for the following reasons:
  flonum
W1178 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
W25 is general case for the following reasons:
  flonum
Generating code
In read[960]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  1% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     1 -  9% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     3 - 20% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  2% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  7% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  2% - Determining which environments are recursive
     1 -  6% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     2 - 15% - Performing lightweight closure conversion
     1 -  6% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     0 -  2% - Determining which environments have external continuation calls
     0 -  4% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  8% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  2% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     0 -  3% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running fib:40:5
Elapsed time: 4.160000000032596290111541748046875 seconds (4.160000000000000142108547152020037174224853515625) for fib:40:5
+!CSVLINE!+stalin-unknown,fib:40:5,4.160000000032596290111541748046875

real	0m4.161s
user	0m4.157s
sys	0m0.000s

Testing fibc under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 16921 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   179 non-called native procedure types
   374 called noop native procedure types
   683 called non-noop native procedure types
     0 foreign procedure types
     2 continuation types
     4 string types
   122 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19370 type sets
   640 hunoz variables
  1553 non-hunoz variables
   494 noop environments
  1606 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 25758 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   179 non-called native procedure types
   525 called noop native procedure types
  1379 called non-noop native procedure types
     0 foreign procedure types
     2 continuation types
    14 string types
   128 structure types
    12 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29360 type sets
   811 hunoz variables
  2815 non-hunoz variables
   645 noop environments
  2761 non-noop environments
3 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 15520 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   179 non-called native procedure types
   525 called noop native procedure types
  1379 called non-noop native procedure types
     0 foreign procedure types
     2 continuation types
    14 string types
   128 structure types
    12 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 18228 type sets
   614 hunoz variables
  2118 non-hunoz variables
     0 noop environments
  1672 non-noop environments
3 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29224 is general case for the following reasons:
  flonum
W26105 is general case for the following reasons:
  nondegenerate nonheaded vector
W24690 is general case for the following reasons:
  flonum
W15783 is general case for the following reasons:
  flonum
W15782 is general case for the following reasons:
  flonum
W15765 is general case for the following reasons:
  flonum
W15354 is general case for the following reasons:
  flonum
W15321 is general case for the following reasons:
  flonum
W15320 is general case for the following reasons:
  flonum
W15319 is general case for the following reasons:
  flonum
W13595 is general case for the following reasons:
  flonum
W13174 is general case for the following reasons:
  flonum
W7595 is general case for the following reasons:
  flonum
W7593 is general case for the following reasons:
  flonum
W74 is general case for the following reasons:
  flonum
W59 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
Generating code
In read[969]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     1 -  8% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     3 - 19% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  3% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  6% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  2% - Determining which environments are recursive
     1 -  5% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     2 - 16% - Performing lightweight closure conversion
     1 -  5% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     0 -  2% - Determining which environments have external continuation calls
     1 -  4% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  8% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     1 -  8% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running fibc:30:10
Elapsed time: 5.200000000186264514923095703125e-1 seconds (5.20000000000000017763568394002504646778106689453125e-1) for fibc:30:10
+!CSVLINE!+stalin-unknown,fibc:30:10,5.200000000186264514923095703125e-1

real	0m0.520s
user	0m0.520s
sys	0m0.000s

Testing fibfp under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 16861 expressions
    12 internal symbol types
     1 external symbol type
    59 primitive procedure types
   179 non-called native procedure types
   371 called noop native procedure types
   677 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   122 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19295 type sets
   637 hunoz variables
  1541 non-hunoz variables
   491 noop environments
  1600 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 25629 expressions
    12 internal symbol types
     1 external symbol type
    59 primitive procedure types
   179 non-called native procedure types
   522 called noop native procedure types
  1370 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   126 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29207 type sets
   808 hunoz variables
  2792 non-hunoz variables
   642 noop environments
  2745 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 15391 expressions
    12 internal symbol types
     1 external symbol type
    59 primitive procedure types
   179 non-called native procedure types
   522 called noop native procedure types
  1370 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   126 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 18075 type sets
   611 hunoz variables
  2095 non-hunoz variables
     0 noop environments
  1656 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29100 is general case for the following reasons:
  flonum
W25996 is general case for the following reasons:
  nondegenerate nonheaded vector
W15740 is general case for the following reasons:
  flonum
W15739 is general case for the following reasons:
  flonum
W15722 is general case for the following reasons:
  flonum
W15311 is general case for the following reasons:
  flonum
W15278 is general case for the following reasons:
  flonum
W15277 is general case for the following reasons:
  flonum
W15276 is general case for the following reasons:
  flonum
W13504 is general case for the following reasons:
  flonum
W13131 is general case for the following reasons:
  flonum
W1178 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
W25 is general case for the following reasons:
  flonum
Generating code
In read[960]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  1% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     1 - 10% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     3 - 20% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  2% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  6% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  2% - Determining which environments are recursive
     1 -  5% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     2 - 15% - Performing lightweight closure conversion
     1 -  5% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     1 -  4% - Determining which environments have external continuation calls
     1 -  5% - Determining blocked environments
     0 -  2% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  8% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     0 -  3% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running fibfp:3.5e1:10
Elapsed time: 4.799999999813735485076904296875e-1 seconds (4.79999999999999982236431605997495353221893310546875e-1) for fibfp:3.5e1:10
+!CSVLINE!+stalin-unknown,fibfp:3.5e1:10,4.799999999813735485076904296875e-1

real	0m0.478s
user	0m0.473s
sys	0m0.000s

Testing sum under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 16869 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   177 non-called native procedure types
   372 called noop native procedure types
   688 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   122 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19307 type sets
   638 hunoz variables
  1544 non-hunoz variables
   492 noop environments
  1603 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 25637 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   177 non-called native procedure types
   523 called noop native procedure types
  1381 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   126 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29219 type sets
   809 hunoz variables
  2795 non-hunoz variables
   643 noop environments
  2748 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 15473 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   177 non-called native procedure types
   523 called noop native procedure types
  1381 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   126 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 18171 type sets
   612 hunoz variables
  2108 non-hunoz variables
     0 noop environments
  1667 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29112 is general case for the following reasons:
  flonum
W26004 is general case for the following reasons:
  nondegenerate nonheaded vector
W15738 is general case for the following reasons:
  flonum
W15737 is general case for the following reasons:
  flonum
W15720 is general case for the following reasons:
  flonum
W15309 is general case for the following reasons:
  flonum
W15276 is general case for the following reasons:
  flonum
W15275 is general case for the following reasons:
  flonum
W15274 is general case for the following reasons:
  flonum
W13502 is general case for the following reasons:
  flonum
W13129 is general case for the following reasons:
  flonum
W1178 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
W25 is general case for the following reasons:
  flonum
Generating code
In read[964]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  1% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     1 - 11% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     3 - 22% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  3% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  6% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  2% - Determining which environments are recursive
     1 -  5% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     2 - 13% - Performing lightweight closure conversion
     1 -  6% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     0 -  3% - Determining which environments have external continuation calls
     1 -  4% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  9% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     0 -  3% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running sum:10000:200000
Elapsed time: 6.359999999986030161380767822265625 seconds (6.36000000000000031974423109204508364200592041015625) for sum:10000:200000
+!CSVLINE!+stalin-unknown,sum:10000:200000,6.359999999986030161380767822265625

real	0m6.355s
user	0m6.353s
sys	0m0.000s

Testing sumfp under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 16869 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   177 non-called native procedure types
   372 called noop native procedure types
   688 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   122 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19307 type sets
   638 hunoz variables
  1544 non-hunoz variables
   492 noop environments
  1603 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 25637 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   177 non-called native procedure types
   523 called noop native procedure types
  1381 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   126 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29219 type sets
   809 hunoz variables
  2795 non-hunoz variables
   643 noop environments
  2748 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 15469 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   177 non-called native procedure types
   523 called noop native procedure types
  1381 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   126 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 18167 type sets
   612 hunoz variables
  2108 non-hunoz variables
     0 noop environments
  1667 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29112 is general case for the following reasons:
  flonum
W26004 is general case for the following reasons:
  nondegenerate nonheaded vector
W15738 is general case for the following reasons:
  flonum
W15737 is general case for the following reasons:
  flonum
W15720 is general case for the following reasons:
  flonum
W15309 is general case for the following reasons:
  flonum
W15276 is general case for the following reasons:
  flonum
W15275 is general case for the following reasons:
  flonum
W15274 is general case for the following reasons:
  flonum
W14507 is general case for the following reasons:
  flonum
W13129 is general case for the following reasons:
  flonum
W1178 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
W25 is general case for the following reasons:
  flonum
Generating code
In read[964]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  1% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     1 -  9% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     2 - 20% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  3% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  6% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  2% - Determining which environments are recursive
     1 -  5% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     2 - 12% - Performing lightweight closure conversion
     1 -  6% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     0 -  3% - Determining which environments have external continuation calls
     1 -  5% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  9% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     0 -  4% - Generating code
     0 -  1% - Removing unused declarations
     0 -  1% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running sumfp:1.0e6:500
Elapsed time: 6.50000000023283064365386962890625e-1 seconds (6.5e-1) for sumfp:1.0e6:500
+!CSVLINE!+stalin-unknown,sumfp:1.0e6:500,6.50000000023283064365386962890625e-1

real	0m0.644s
user	0m0.640s
sys	0m0.003s

Testing fft under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 17264 expressions
    12 internal symbol types
     1 external symbol type
    63 primitive procedure types
   177 non-called native procedure types
   392 called noop native procedure types
   778 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   122 structure types
    13 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19748 type sets
   656 hunoz variables
  1570 non-hunoz variables
   503 noop environments
  1645 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 26200 expressions
    12 internal symbol types
     1 external symbol type
    63 primitive procedure types
   178 non-called native procedure types
   547 called noop native procedure types
  1486 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   126 structure types
    13 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29860 type sets
   831 hunoz variables
  2854 non-hunoz variables
   658 noop environments
  2811 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 112
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 16480 expressions
    12 internal symbol types
     1 external symbol type
    63 primitive procedure types
   177 non-called native procedure types
   547 called noop native procedure types
  1486 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   126 structure types
    13 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19292 type sets
   656 hunoz variables
  2181 non-hunoz variables
     0 noop environments
  1777 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 112
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29752 is general case for the following reasons:
  flonum
W26599 is general case for the following reasons:
  nondegenerate nonheaded vector
W15972 is general case for the following reasons:
  flonum
W15971 is general case for the following reasons:
  flonum
W15954 is general case for the following reasons:
  flonum
W15543 is general case for the following reasons:
  flonum
W15510 is general case for the following reasons:
  flonum
W15509 is general case for the following reasons:
  flonum
W15508 is general case for the following reasons:
  flonum
W13784 is general case for the following reasons:
  flonum
W13776 is general case for the following reasons:
  flonum
W13738 is general case for the following reasons:
  flonum
W13736 is general case for the following reasons:
  flonum
W13363 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
W25 is general case for the following reasons:
  flonum
Generating code
In read[1017]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     2 -  9% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     5 - 26% - Determining which call sites to split
     0 -  0% - Computing call graph
     1 -  3% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  6% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  1% - Determining which environments are recursive
     1 -  6% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     2 - 14% - Performing lightweight closure conversion
     1 -  5% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     0 -  2% - Determining which environments have external continuation calls
     1 -  4% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  7% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     0 -  3% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  0% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
./bench: line 361: 23707 Killed                  "$exe" < "$2"

real	4m30.934s
user	4m54.937s
sys	0m5.950s

Testing mbrot under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 17069 expressions
    12 internal symbol types
     1 external symbol type
    59 primitive procedure types
   179 non-called native procedure types
   379 called noop native procedure types
   702 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   122 structure types
    13 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19546 type sets
   647 hunoz variables
  1572 non-hunoz variables
   499 noop environments
  1625 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 25845 expressions
    12 internal symbol types
     1 external symbol type
    59 primitive procedure types
   179 non-called native procedure types
   530 called noop native procedure types
  1395 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   126 structure types
    13 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29466 type sets
   818 hunoz variables
  2825 non-hunoz variables
   650 noop environments
  2772 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 15607 expressions
    12 internal symbol types
     1 external symbol type
    59 primitive procedure types
   179 non-called native procedure types
   530 called noop native procedure types
  1395 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   126 structure types
    13 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 18334 type sets
   621 hunoz variables
  2128 non-hunoz variables
     0 noop environments
  1683 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29357 is general case for the following reasons:
  flonum
W26212 is general case for the following reasons:
  nondegenerate nonheaded vector
W15773 is general case for the following reasons:
  flonum
W15772 is general case for the following reasons:
  flonum
W15755 is general case for the following reasons:
  flonum
W15344 is general case for the following reasons:
  flonum
W15311 is general case for the following reasons:
  flonum
W15310 is general case for the following reasons:
  flonum
W15309 is general case for the following reasons:
  flonum
W13585 is general case for the following reasons:
  flonum
W13164 is general case for the following reasons:
  flonum
W7580 is general case for the following reasons:
  flonum
W1178 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
Generating code
In read[993]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     2 -  9% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     3 - 19% - Determining which call sites to split
     0 -  0% - Computing call graph
     1 -  3% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  7% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  2% - Determining which environments are recursive
     1 -  6% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     3 - 16% - Performing lightweight closure conversion
     1 -  7% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     1 -  3% - Determining which environments have external continuation calls
     1 -  4% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  7% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     0 -  3% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running mbrot:75:1000
Elapsed time: 6.000000000931322574615478515625e-1 seconds (6.0e-1) for mbrot:75:1000
+!CSVLINE!+stalin-unknown,mbrot:75:1000,6.000000000931322574615478515625e-1

real	0m0.600s
user	0m0.600s
sys	0m0.000s

Testing mbrotZ under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
/tmp/larcenous/Stalin/mbrotZ.exp:53:2215:Unbound variable
Running...
./bench: line 363: /tmp/larcenous/Stalin/mbrotZ: No such file or directory

real	0m0.000s
user	0m0.000s
sys	0m0.000s

Testing nucleic under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 28371 expressions
    16 internal symbol types
     1 external symbol type
    66 primitive procedure types
   176 non-called native procedure types
   564 called noop native procedure types
   956 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   150 structure types
  1723 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 33186 type sets
   817 hunoz variables
  1974 non-hunoz variables
   671 noop environments
  1805 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 38376 expressions
    16 internal symbol types
     1 external symbol type
    64 primitive procedure types
   241 non-called native procedure types
   708 called noop native procedure types
  1600 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   152 structure types
  1734 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 44442 type sets
   993 hunoz variables
  3498 non-hunoz variables
   827 noop environments
  3147 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 28159 expressions
    16 internal symbol types
     1 external symbol type
    64 primitive procedure types
   179 non-called native procedure types
   708 called noop native procedure types
  1600 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   152 structure types
  1734 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 33308 type sets
   797 hunoz variables
  2777 non-hunoz variables
     0 noop environments
  2056 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W41643 is general case for the following reasons:
  flonum
W38843 is general case for the following reasons:
  nondegenerate nonheaded vector
W18704 is general case for the following reasons:
  flonum
W17082 is general case for the following reasons:
  flonum
W17081 is general case for the following reasons:
  flonum
W17064 is general case for the following reasons:
  flonum
W16653 is general case for the following reasons:
  flonum
W16620 is general case for the following reasons:
  flonum
W16619 is general case for the following reasons:
  flonum
W16618 is general case for the following reasons:
  flonum
W14473 is general case for the following reasons:
  flonum
W7955 is general case for the following reasons:
  flonum
W70 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
W25 is general case for the following reasons:
  flonum
Generating code
In read[1512]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  0% - Expanding macros
     2 -  1% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  0% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
    54 - 23% - Performing flow analysis
     0 -  0% - Enumerating call sites
    18 -  8% - Determining which types and type sets are used
     6 -  3% - Determining which call sites to split
     0 -  0% - Computing call graph
     1 -  0% - Determining which environments are called more than once
     0 -  0% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
    11 -  5% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  0% - Determining which environments are recursive
     1 -  1% - Determining which environments are reentrant
    41 - 18% - Asserting uniqueness
    53 - 23% - Performing lightweight closure conversion
     1 -  0% - Determining parents
    15 -  6% - Determining which expressions need conversion to CPS
     0 -  0% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     1 -  0% - Determining which environments have external continuation calls
     1 -  0% - Determining blocked environments
     0 -  0% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
    23 - 10% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  0% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     1 -  0% - Generating code
     0 -  0% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  0% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running nucleic:50
Elapsed time: 4.59999999846331775188446044921875e-1 seconds (4.60000000000000053290705182007513940334320068359375e-1) for nucleic:50
+!CSVLINE!+stalin-unknown,nucleic:50,4.59999999846331775188446044921875e-1

real	0m0.460s
user	0m0.467s
sys	0m0.000s

Testing pi under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
/tmp/larcenous/Stalin/pi.exp:70:2571:Unbound variable
Running...
./bench: line 363: /tmp/larcenous/Stalin/pi: No such file or directory

real	0m0.000s
user	0m0.000s
sys	0m0.000s

Testing pnpoly under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 17168 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   178 non-called native procedure types
   386 called noop native procedure types
   692 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   123 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19635 type sets
   651 hunoz variables
  1558 non-hunoz variables
   505 noop environments
  1611 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 25936 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   178 non-called native procedure types
   537 called noop native procedure types
  1385 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   127 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29547 type sets
   822 hunoz variables
  2809 non-hunoz variables
   656 noop environments
  2756 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 15729 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   178 non-called native procedure types
   537 called noop native procedure types
  1385 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   127 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 18450 type sets
   626 hunoz variables
  2115 non-hunoz variables
     0 noop environments
  1671 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29438 is general case for the following reasons:
  flonum
W26303 is general case for the following reasons:
  nondegenerate nonheaded vector
W15776 is general case for the following reasons:
  flonum
W15775 is general case for the following reasons:
  flonum
W15758 is general case for the following reasons:
  flonum
W15347 is general case for the following reasons:
  flonum
W15314 is general case for the following reasons:
  flonum
W15313 is general case for the following reasons:
  flonum
W15312 is general case for the following reasons:
  flonum
W13588 is general case for the following reasons:
  flonum
W13540 is general case for the following reasons:
  flonum
W13167 is general case for the following reasons:
  flonum
W1178 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
Generating code
In read[985]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     2 - 10% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     3 - 19% - Determining which call sites to split
     0 -  0% - Computing call graph
     1 -  3% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  7% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  2% - Determining which environments are recursive
     1 -  6% - Determining which environments are reentrant
     0 -  1% - Asserting uniqueness
     2 - 15% - Performing lightweight closure conversion
     1 -  7% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  1% - Determining which environments have external self tail calls
     0 -  3% - Determining which environments have external continuation calls
     1 -  3% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  6% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     1 -  4% - Generating code
     0 -  1% - Removing unused declarations
     0 -  1% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running pnpoly:1000000
Elapsed time: 1.559999999939464032649993896484375 seconds (1.560000000000000053290705182007513940334320068359375) for pnpoly:1000000
+!CSVLINE!+stalin-unknown,pnpoly:1000000,1.559999999939464032649993896484375

real	0m1.564s
user	0m1.697s
sys	0m0.047s

Testing ray under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
/tmp/larcenous/Stalin/ray.exp:67:2378:Unbound variable
Running...
./bench: line 363: /tmp/larcenous/Stalin/ray: No such file or directory

real	0m0.000s
user	0m0.000s
sys	0m0.000s

Testing simplex under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 18541 expressions
    12 internal symbol types
     1 external symbol type
    62 primitive procedure types
   175 non-called native procedure types
   444 called noop native procedure types
   917 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   124 structure types
    23 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 21171 type sets
   728 hunoz variables
  1630 non-hunoz variables
   553 noop environments
  1776 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 27565 expressions
    12 internal symbol types
     1 external symbol type
    61 primitive procedure types
   199 non-called native procedure types
   592 called noop native procedure types
  1597 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   128 structure types
    23 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 31373 type sets
   903 hunoz variables
  2919 non-hunoz variables
   708 noop environments
  2954 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 17549 expressions
    12 internal symbol types
     1 external symbol type
    61 primitive procedure types
   175 non-called native procedure types
   592 called noop native procedure types
  1597 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   128 structure types
    23 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 20470 type sets
   720 hunoz variables
  2215 non-hunoz variables
     0 noop environments
  1887 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W31250 is general case for the following reasons:
  flonum
W27966 is general case for the following reasons:
  nondegenerate nonheaded vector
W16188 is general case for the following reasons:
  flonum
W16187 is general case for the following reasons:
  flonum
W16170 is general case for the following reasons:
  flonum
W15759 is general case for the following reasons:
  flonum
W15726 is general case for the following reasons:
  flonum
W15725 is general case for the following reasons:
  flonum
W15724 is general case for the following reasons:
  flonum
W14000 is general case for the following reasons:
  flonum
W13954 is general case for the following reasons:
  flonum
W13952 is general case for the following reasons:
  flonum
W13706 is general case for the following reasons:
  flonum
W13595 is general case for the following reasons:
  flonum
W13579 is general case for the following reasons:
  flonum
W1236 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
Generating code
In read[1194]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     2 -  9% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     8 - 34% - Determining which call sites to split
     0 -  0% - Computing call graph
     1 -  3% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  5% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  1% - Determining which environments are recursive
     1 -  3% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     3 - 14% - Performing lightweight closure conversion
     1 -  3% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     1 -  2% - Determining which environments have external continuation calls
     1 -  5% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  6% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     1 -  2% - Generating code
     0 -  0% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  0% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running simplex:1000000
Elapsed time: 3.39999999967403709888458251953125e-1 seconds (3.4000000000000003552713678800500929355621337890625e-1) for simplex:1000000
+!CSVLINE!+stalin-unknown,simplex:1000000,3.39999999967403709888458251953125e-1

real	0m0.345s
user	0m0.370s
sys	0m0.013s

Testing ack under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 16890 expressions
    12 internal symbol types
     1 external symbol type
    59 primitive procedure types
   179 non-called native procedure types
   371 called noop native procedure types
   679 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   122 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19327 type sets
   637 hunoz variables
  1544 non-hunoz variables
   491 noop environments
  1602 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 25658 expressions
    12 internal symbol types
     1 external symbol type
    59 primitive procedure types
   179 non-called native procedure types
   522 called noop native procedure types
  1372 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   126 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29239 type sets
   808 hunoz variables
  2795 non-hunoz variables
   642 noop environments
  2747 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 15420 expressions
    12 internal symbol types
     1 external symbol type
    59 primitive procedure types
   179 non-called native procedure types
   522 called noop native procedure types
  1372 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   126 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 18107 type sets
   611 hunoz variables
  2098 non-hunoz variables
     0 noop environments
  1658 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29132 is general case for the following reasons:
  flonum
W26025 is general case for the following reasons:
  nondegenerate nonheaded vector
W15742 is general case for the following reasons:
  flonum
W15741 is general case for the following reasons:
  flonum
W15724 is general case for the following reasons:
  flonum
W15313 is general case for the following reasons:
  flonum
W15280 is general case for the following reasons:
  flonum
W15279 is general case for the following reasons:
  flonum
W15278 is general case for the following reasons:
  flonum
W13506 is general case for the following reasons:
  flonum
W13133 is general case for the following reasons:
  flonum
W1178 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
W25 is general case for the following reasons:
  flonum
Generating code
In read[962]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     2 - 10% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     3 - 18% - Determining which call sites to split
     0 -  0% - Computing call graph
     1 -  3% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  6% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  1% - Determining which environments are recursive
     1 -  6% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     3 - 20% - Performing lightweight closure conversion
     1 -  6% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  1% - Determining which environments have external self tail calls
     0 -  2% - Determining which environments have external continuation calls
     1 -  4% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  8% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     1 -  3% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running ack:3:12:2
Elapsed time: 1.056999999994877814657456838176585733890533447265625e1 seconds (1.0570000000000001616484723854227922856807708740234375e1) for ack:3:12:2
+!CSVLINE!+stalin-unknown,ack:3:12:2,1.056999999994877814657456838176585733890533447265625e1

real	0m10.572s
user	0m10.557s
sys	0m0.007s

Testing array1 under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 16999 expressions
    12 internal symbol types
     1 external symbol type
    61 primitive procedure types
   177 non-called native procedure types
   380 called noop native procedure types
   710 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   122 structure types
    13 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19463 type sets
   648 hunoz variables
  1558 non-hunoz variables
   500 noop environments
  1624 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 25767 expressions
    12 internal symbol types
     1 external symbol type
    61 primitive procedure types
   177 non-called native procedure types
   531 called noop native procedure types
  1403 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   126 structure types
    13 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29375 type sets
   819 hunoz variables
  2809 non-hunoz variables
   651 noop environments
  2769 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 15607 expressions
    12 internal symbol types
     1 external symbol type
    61 primitive procedure types
   177 non-called native procedure types
   531 called noop native procedure types
  1403 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   126 structure types
    13 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 18331 type sets
   622 hunoz variables
  2122 non-hunoz variables
     0 noop environments
  1689 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29266 is general case for the following reasons:
  flonum
W26134 is general case for the following reasons:
  nondegenerate nonheaded vector
W15749 is general case for the following reasons:
  flonum
W15748 is general case for the following reasons:
  flonum
W15731 is general case for the following reasons:
  flonum
W15320 is general case for the following reasons:
  flonum
W15287 is general case for the following reasons:
  flonum
W15286 is general case for the following reasons:
  flonum
W15285 is general case for the following reasons:
  flonum
W13578 is general case for the following reasons:
  flonum
W13561 is general case for the following reasons:
  flonum
W13513 is general case for the following reasons:
  flonum
W13140 is general case for the following reasons:
  flonum
W1178 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
Generating code
In read[993]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     1 -  9% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     4 - 23% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  3% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  7% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  1% - Determining which environments are recursive
     1 -  5% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     3 - 16% - Performing lightweight closure conversion
     1 -  5% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     0 -  2% - Determining which environments have external continuation calls
     1 -  4% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  7% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     0 -  3% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running array1:1000000:500
Elapsed time: 6.1000000010244548320770263671875e-1 seconds (6.0999999999999996447286321199499070644378662109375e-1) for array1:1000000:500
+!CSVLINE!+stalin-unknown,array1:1000000:500,6.1000000010244548320770263671875e-1

real	0m0.612s
user	0m0.610s
sys	0m0.000s

Testing string under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 16979 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   176 non-called native procedure types
   380 called noop native procedure types
   711 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     5 string types
   124 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19437 type sets
   649 hunoz variables
  1549 non-hunoz variables
   498 noop environments
  1618 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 25747 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   176 non-called native procedure types
   531 called noop native procedure types
  1404 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    15 string types
   128 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29349 type sets
   820 hunoz variables
  2800 non-hunoz variables
   649 noop environments
  2763 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 15631 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   176 non-called native procedure types
   531 called noop native procedure types
  1404 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    15 string types
   128 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 18358 type sets
   626 hunoz variables
  2119 non-hunoz variables
     0 noop environments
  1690 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29238 is general case for the following reasons:
  flonum
W26114 is general case for the following reasons:
  nondegenerate nonheaded vector
W15748 is general case for the following reasons:
  flonum
W15747 is general case for the following reasons:
  flonum
W15730 is general case for the following reasons:
  flonum
W15319 is general case for the following reasons:
  flonum
W15286 is general case for the following reasons:
  flonum
W15285 is general case for the following reasons:
  flonum
W15284 is general case for the following reasons:
  flonum
W13560 is general case for the following reasons:
  flonum
W13512 is general case for the following reasons:
  flonum
W13139 is general case for the following reasons:
  flonum
W1178 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
Generating code
In read[985]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     1 - 10% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     3 - 20% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  2% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  6% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  2% - Determining which environments are recursive
     1 -  4% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     2 - 16% - Performing lightweight closure conversion
     1 -  5% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     1 -  3% - Determining which environments have external continuation calls
     1 -  4% - Determining blocked environments
     0 -  2% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  8% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  2% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     1 -  3% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running string:500000:25
Elapsed time: 5.69999999948777258396148681640625e-1 seconds (5.699999999999999289457264239899814128875732421875e-1) for string:500000:25
+!CSVLINE!+stalin-unknown,string:500000:25,5.69999999948777258396148681640625e-1

real	0m0.573s
user	0m0.803s
sys	0m0.020s

Testing sum1 under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 16875 expressions
    12 internal symbol types
     1 external symbol type
    62 primitive procedure types
   178 non-called native procedure types
   381 called noop native procedure types
   724 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   123 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19319 type sets
   639 hunoz variables
  1547 non-hunoz variables
   493 noop environments
  1603 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 25826 expressions
    12 internal symbol types
     1 external symbol type
    59 primitive procedure types
   234 non-called native procedure types
   524 called noop native procedure types
  1378 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   127 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29450 type sets
   815 hunoz variables
  2834 non-hunoz variables
   648 noop environments
  2773 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 15432 expressions
    12 internal symbol types
     1 external symbol type
    59 primitive procedure types
   178 non-called native procedure types
   524 called noop native procedure types
  1378 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   127 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 18127 type sets
   614 hunoz variables
  2106 non-hunoz variables
     0 noop environments
  1665 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29341 is general case for the following reasons:
  flonum
W26229 is general case for the following reasons:
  nondegenerate nonheaded vector
W24835 is general case for the following reasons:
  flonum
W15917 is general case for the following reasons:
  flonum
W15916 is general case for the following reasons:
  flonum
W15899 is general case for the following reasons:
  flonum
W15488 is general case for the following reasons:
  flonum
W15455 is general case for the following reasons:
  flonum
W15454 is general case for the following reasons:
  flonum
W15453 is general case for the following reasons:
  flonum
W14686 is general case for the following reasons:
  flonum
W13308 is general case for the following reasons:
  flonum
W72 is general case for the following reasons:
  flonum
W43 is general case for the following reasons:
  flonum
W1 is general case for the following reasons:
  flonum
Generating code
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  1% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     2 - 10% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     4 - 25% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  2% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  6% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  1% - Determining which environments are recursive
     1 -  4% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     3 - 16% - Performing lightweight closure conversion
     1 -  5% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     0 -  2% - Determining which environments have external continuation calls
     1 -  5% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  7% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     0 -  3% - Generating code
     0 -  1% - Removing unused declarations
     0 -  1% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running sum1:25
Elapsed time: 1.239999999874271452426910400390625 seconds (1.2399999999999999911182158029987476766109466552734375) for sum1:25
+!CSVLINE!+stalin-unknown,sum1:25,1.239999999874271452426910400390625

real	0m1.240s
user	0m1.263s
sys	0m0.013s

Testing cat under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
/tmp/larcenous/Stalin/cat.exp:43:1567:Unbound variable
Running...
./bench: line 363: /tmp/larcenous/Stalin/cat: No such file or directory

real	0m0.000s
user	0m0.000s
sys	0m0.000s

Testing tail under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
/tmp/larcenous/Stalin/tail.exp:39:1496:Unbound variable
Running...
./bench: line 363: /tmp/larcenous/Stalin/tail: No such file or directory

real	0m0.000s
user	0m0.000s
sys	0m0.000s

Testing wc under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 16921 expressions
    12 internal symbol types
     1 external symbol type
    62 primitive procedure types
   177 non-called native procedure types
   382 called noop native procedure types
   737 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   124 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19369 type sets
   639 hunoz variables
  1549 non-hunoz variables
   493 noop environments
  1605 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 25984 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   225 non-called native procedure types
   527 called noop native procedure types
  1408 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   128 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29628 type sets
   817 hunoz variables
  2854 non-hunoz variables
   650 noop environments
  2790 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 110
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 15782 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   177 non-called native procedure types
   527 called noop native procedure types
  1408 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   128 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 18516 type sets
   624 hunoz variables
  2137 non-hunoz variables
     0 noop environments
  1699 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 110
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29517 is general case for the following reasons:
  flonum
W26403 is general case for the following reasons:
  nondegenerate nonheaded vector
W16027 is general case for the following reasons:
  flonum
W16026 is general case for the following reasons:
  flonum
W16009 is general case for the following reasons:
  flonum
W15598 is general case for the following reasons:
  flonum
W15565 is general case for the following reasons:
  flonum
W15564 is general case for the following reasons:
  flonum
W15563 is general case for the following reasons:
  flonum
W13856 is general case for the following reasons:
  flonum
W13839 is general case for the following reasons:
  flonum
W13793 is general case for the following reasons:
  flonum
W13791 is general case for the following reasons:
  flonum
W13418 is general case for the following reasons:
  flonum
W72 is general case for the following reasons:
  flonum
W1 is general case for the following reasons:
  flonum
Generating code
In read[967]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     1 -  7% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     3 - 18% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  2% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  7% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  2% - Determining which environments are recursive
     1 -  6% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     3 - 17% - Performing lightweight closure conversion
     1 -  7% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     1 -  3% - Determining which environments have external continuation calls
     1 -  6% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  7% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     1 -  4% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  0% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running wc:inputs/bib:50
Elapsed time: 4.09000000008381903171539306640625 seconds (4.089999999999999857891452847979962825775146484375) for wc:inputs/bib:50
+!CSVLINE!+stalin-unknown,wc:inputs/bib:50,4.09000000008381903171539306640625

real	0m4.095s
user	0m4.050s
sys	0m0.047s

Testing read1 under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 16880 expressions
    12 internal symbol types
     1 external symbol type
    62 primitive procedure types
   177 non-called native procedure types
   382 called noop native procedure types
   738 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   124 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19325 type sets
   639 hunoz variables
  1546 non-hunoz variables
   493 noop environments
  1606 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 25831 expressions
    12 internal symbol types
     1 external symbol type
    62 primitive procedure types
   177 non-called native procedure types
   537 called noop native procedure types
  1451 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   128 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29456 type sets
   815 hunoz variables
  2833 non-hunoz variables
   648 noop environments
  2776 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 112
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 16110 expressions
    12 internal symbol types
     1 external symbol type
    62 primitive procedure types
   177 non-called native procedure types
   537 called noop native procedure types
  1451 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   128 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 18887 type sets
   640 hunoz variables
  2160 non-hunoz variables
     0 noop environments
  1742 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 112
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29345 is general case for the following reasons:
  flonum
W26234 is general case for the following reasons:
  nondegenerate nonheaded vector
W15915 is general case for the following reasons:
  flonum
W15914 is general case for the following reasons:
  flonum
W15897 is general case for the following reasons:
  flonum
W15486 is general case for the following reasons:
  flonum
W15453 is general case for the following reasons:
  flonum
W15452 is general case for the following reasons:
  flonum
W15451 is general case for the following reasons:
  flonum
W13727 is general case for the following reasons:
  flonum
W13719 is general case for the following reasons:
  flonum
W13681 is general case for the following reasons:
  flonum
W13679 is general case for the following reasons:
  flonum
W13306 is general case for the following reasons:
  flonum
W59 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
W25 is general case for the following reasons:
  flonum
Generating code
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  1% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     1 - 10% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     3 - 20% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  3% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  6% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  2% - Determining which environments are recursive
     1 -  5% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     2 - 14% - Performing lightweight closure conversion
     1 -  6% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     0 -  3% - Determining which environments have external continuation calls
     1 -  5% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  9% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     0 -  3% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running read1:2500
Elapsed time: 8.809999999939464032649993896484375 seconds (8.8100000000000004973799150320701301097869873046875) for read1:2500
+!CSVLINE!+stalin-unknown,read1:2500,8.809999999939464032649993896484375

real	0m8.804s
user	0m8.870s
sys	0m0.030s

Testing compiler under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
/tmp/larcenous/Stalin/compiler.exp:9737:456640:Unbound variable
Running...
./bench: line 363: /tmp/larcenous/Stalin/compiler: No such file or directory

real	0m0.000s
user	0m0.000s
sys	0m0.000s

Testing conform under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
/tmp/larcenous/Stalin/conform.exp:93:3728:Unbound variable
Running...
./bench: line 363: /tmp/larcenous/Stalin/conform: No such file or directory

real	0m0.000s
user	0m0.000s
sys	0m0.000s

Testing dynamic under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
./bench: line 353: 24369 Killed                  ${STALIN} -On -Ob -Om -Or -Ot -d -d1 -k -copt -O3 $expanded
Running...
./bench: line 363: /tmp/larcenous/Stalin/dynamic: No such file or directory

real	0m0.000s
user	0m0.000s
sys	0m0.000s

Testing earley under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 19531 expressions
    14 internal symbol types
     1 external symbol type
    61 primitive procedure types
   175 non-called native procedure types
   472 called noop native procedure types
  1058 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     5 string types
   148 structure types
    23 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 22533 type sets
   756 hunoz variables
  1926 non-hunoz variables
   579 noop environments
  1921 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 7
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 29864 expressions
    14 internal symbol types
     1 external symbol type
    61 primitive procedure types
   223 non-called native procedure types
   630 called noop native procedure types
  1814 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   157 structure types
    28 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 34232 type sets
   992 hunoz variables
  3394 non-hunoz variables
   747 noop environments
  3253 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 7
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 19768 expressions
    14 internal symbol types
     1 external symbol type
    61 primitive procedure types
   175 non-called native procedure types
   630 called noop native procedure types
  1814 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   157 structure types
    28 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 23240 type sets
   798 hunoz variables
  2692 non-hunoz variables
     0 noop environments
  2175 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 7
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W33419 is general case for the following reasons:
  flonum
W29811 is general case for the following reasons:
  nondegenerate nonheaded vector
W16975 is general case for the following reasons:
  flonum
W16974 is general case for the following reasons:
  flonum
W16957 is general case for the following reasons:
  flonum
W16546 is general case for the following reasons:
  flonum
W16513 is general case for the following reasons:
  flonum
W16512 is general case for the following reasons:
  flonum
W16511 is general case for the following reasons:
  flonum
W14787 is general case for the following reasons:
  flonum
W14366 is general case for the following reasons:
  flonum
W103 is general case for the following reasons:
  flonum
W18 is general case for the following reasons:
  flonum
W3 is general case for the following reasons:
  flonum
W2 is general case for the following reasons:
  flonum
Generating code
In read[1383]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  0% - Expanding macros
     0 -  1% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     3 -  7% - Performing flow analysis
     0 -  0% - Enumerating call sites
     1 -  2% - Determining which types and type sets are used
    13 - 33% - Determining which call sites to split
     0 -  0% - Computing call graph
     1 -  2% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     3 -  7% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     1 -  3% - Determining which environments are recursive
     3 -  8% - Determining which environments are reentrant
     1 -  2% - Asserting uniqueness
     7 - 17% - Performing lightweight closure conversion
     1 -  2% - Determining parents
     0 -  1% - Determining which expressions need conversion to CPS
     0 -  0% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     0 -  1% - Determining which environments have external continuation calls
     1 -  2% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     2 -  5% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     1 -  2% - Generating code
     0 -  0% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  0% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
./bench: line 361: 24653 Segmentation fault      (core dumped) "$exe" < "$2"

real	0m7.850s
user	0m6.680s
sys	0m1.607s

Testing graphs under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 17985 expressions
    15 internal symbol types
     1 external symbol type
    60 primitive procedure types
   176 non-called native procedure types
   402 called noop native procedure types
   835 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   132 structure types
    18 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 20651 type sets
   689 hunoz variables
  1694 non-hunoz variables
   520 noop environments
  1744 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 28007 expressions
    15 internal symbol types
     1 external symbol type
    60 primitive procedure types
   176 non-called native procedure types
   563 called noop native procedure types
  1604 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   138 structure types
    24 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 31912 type sets
   878 hunoz variables
  3038 non-hunoz variables
   681 noop environments
  3013 non-noop environments
2 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 17308 expressions
    15 internal symbol types
     1 external symbol type
    60 primitive procedure types
   176 non-called native procedure types
   563 called noop native procedure types
  1604 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   138 structure types
    24 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 20333 type sets
   683 hunoz variables
  2353 non-hunoz variables
     0 noop environments
  1916 non-noop environments
2 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W31344 is general case for the following reasons:
  flonum
W28035 is general case for the following reasons:
  nondegenerate nonheaded vector
W16680 is general case for the following reasons:
  flonum
W16679 is general case for the following reasons:
  flonum
W16662 is general case for the following reasons:
  flonum
W16251 is general case for the following reasons:
  flonum
W16218 is general case for the following reasons:
  flonum
W16217 is general case for the following reasons:
  flonum
W16216 is general case for the following reasons:
  flonum
W14492 is general case for the following reasons:
  flonum
W14087 is general case for the following reasons:
  flonum
W253 is general case for the following reasons:
  flonum
W217 is general case for the following reasons:
  flonum
W172 is general case for the following reasons:
  flonum
W138 is general case for the following reasons:
  flonum
Generating code
In read[1155]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  1% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     1 -  7% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     5 - 27% - Determining which call sites to split
     0 -  0% - Computing call graph
     1 -  3% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  5% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  1% - Determining which environments are recursive
     1 -  4% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     3 - 15% - Performing lightweight closure conversion
     1 -  3% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     0 -  2% - Determining which environments have external continuation calls
     1 -  4% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     2 -  8% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     1 -  4% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     0 -  2% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  0% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running graphs:7:3
Elapsed time: 1.45599999999394658090068332967348396778106689453125e1 seconds (1.456000000000000227373675443232059478759765625e1) for graphs:7:3
+!CSVLINE!+stalin-unknown,graphs:7:3,1.45599999999394658090068332967348396778106689453125e1

real	0m14.566s
user	0m22.777s
sys	0m0.123s

Testing lattice under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 17633 expressions
    19 internal symbol types
     1 external symbol type
    63 primitive procedure types
   172 non-called native procedure types
   423 called noop native procedure types
   905 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     5 string types
   140 structure types
    12 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 20229 type sets
   665 hunoz variables
  1638 non-hunoz variables
   513 noop environments
  1675 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 27907 expressions
    19 internal symbol types
     1 external symbol type
    63 primitive procedure types
   262 non-called native procedure types
   560 called noop native procedure types
  1586 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   147 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 31760 type sets
   843 hunoz variables
  3022 non-hunoz variables
   671 noop environments
  2930 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 17627 expressions
    19 internal symbol types
     1 external symbol type
    63 primitive procedure types
   172 non-called native procedure types
   560 called noop native procedure types
  1586 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   147 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 20623 type sets
   672 hunoz variables
  2336 non-hunoz variables
     0 noop environments
  1900 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W31607 is general case for the following reasons:
  flonum
W28378 is general case for the following reasons:
  nondegenerate nonheaded vector
W17253 is general case for the following reasons:
  flonum
W17252 is general case for the following reasons:
  flonum
W17235 is general case for the following reasons:
  flonum
W16824 is general case for the following reasons:
  flonum
W16791 is general case for the following reasons:
  flonum
W16790 is general case for the following reasons:
  flonum
W16789 is general case for the following reasons:
  flonum
W15082 is general case for the following reasons:
  flonum
W15065 is general case for the following reasons:
  flonum
W15019 is general case for the following reasons:
  flonum
W14660 is general case for the following reasons:
  flonum
W14652 is general case for the following reasons:
  flonum
W14644 is general case for the following reasons:
  flonum
W1722 is general case for the following reasons:
  flonum
W732 is general case for the following reasons:
  flonum
W134 is general case for the following reasons:
  flonum
Generating code
In read[1053]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  0% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     2 - 10% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     6 - 31% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  2% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  5% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  1% - Determining which environments are recursive
     1 -  4% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     3 - 15% - Performing lightweight closure conversion
     1 -  4% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     1 -  3% - Determining which environments have external continuation calls
     1 -  4% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  7% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     1 -  3% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running lattice:44:10
Elapsed time: 4.930000000051222741603851318359375 seconds (4.92999999999999971578290569595992565155029296875) for lattice:44:10
+!CSVLINE!+stalin-unknown,lattice:44:10,4.930000000051222741603851318359375

real	0m4.931s
user	0m5.313s
sys	0m0.013s

Testing matrix under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 18787 expressions
    17 internal symbol types
     1 external symbol type
    65 primitive procedure types
   168 non-called native procedure types
   436 called noop native procedure types
   984 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   161 structure types
    13 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 21658 type sets
   694 hunoz variables
  1841 non-hunoz variables
   543 noop environments
  1822 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 31186 expressions
    17 internal symbol types
     1 external symbol type
    63 primitive procedure types
   223 non-called native procedure types
   588 called noop native procedure types
  1750 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   183 structure types
    13 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 35430 type sets
   875 hunoz variables
  3372 non-hunoz variables
   704 noop environments
  3238 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 110
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 19525 expressions
    17 internal symbol types
     1 external symbol type
    63 primitive procedure types
   170 non-called native procedure types
   588 called noop native procedure types
  1750 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   183 structure types
    13 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 22878 type sets
   689 hunoz variables
  2667 non-hunoz variables
     0 noop environments
  2127 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 110
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W33351 is general case for the following reasons:
  flonum
W29890 is general case for the following reasons:
  nondegenerate nonheaded vector
W17745 is general case for the following reasons:
  flonum
W17744 is general case for the following reasons:
  flonum
W17727 is general case for the following reasons:
  flonum
W17316 is general case for the following reasons:
  flonum
W17283 is general case for the following reasons:
  flonum
W17282 is general case for the following reasons:
  flonum
W17281 is general case for the following reasons:
  flonum
W15557 is general case for the following reasons:
  flonum
W15511 is general case for the following reasons:
  flonum
W15399 is general case for the following reasons:
  flonum
W15136 is general case for the following reasons:
  flonum
W2013 is general case for the following reasons:
  flonum
W2002 is general case for the following reasons:
  flonum
W76 is general case for the following reasons:
  flonum
Generating code
In read[1237]
Argument to STRUCTURE-REF will not be a structure of the correct type
This case of squished-to-squished is not (yet) implemented
Running...
./bench: line 363: /tmp/larcenous/Stalin/matrix: No such file or directory

real	0m0.000s
user	0m0.000s
sys	0m0.000s

Testing maze under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 19352 expressions
    15 internal symbol types
     1 external symbol type
    66 primitive procedure types
   174 non-called native procedure types
   491 called noop native procedure types
  1004 called non-noop native procedure types
     0 foreign procedure types
     1 continuation type
     4 string types
   127 structure types
    18 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 22229 type sets
   781 hunoz variables
  1823 non-hunoz variables
   602 noop environments
  1865 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 33863 expressions
    15 internal symbol types
     1 external symbol type
    65 primitive procedure types
   213 non-called native procedure types
   637 called noop native procedure types
  1881 called non-noop native procedure types
     0 foreign procedure types
     1 continuation type
    14 string types
   132 structure types
    18 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 38252 type sets
   957 hunoz variables
  3694 non-hunoz variables
   758 noop environments
  3492 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 110
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 23676 expressions
    15 internal symbol types
     1 external symbol type
    65 primitive procedure types
   174 non-called native procedure types
   637 called noop native procedure types
  1881 called non-noop native procedure types
     0 foreign procedure types
     1 continuation type
    14 string types
   132 structure types
    18 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 27177 type sets
   767 hunoz variables
  2996 non-hunoz variables
     0 noop environments
  2424 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 110
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W33729 is general case for the following reasons:
  flonum
W30199 is general case for the following reasons:
  nondegenerate nonheaded vector
W17454 is general case for the following reasons:
  flonum
W17453 is general case for the follow
Error: This shouldn't happen
ing reasons:
  flonum
W17436 is general case for the following reasons:
  flonum
W17025 is general case for the following reasons:
  flonum
W16992 is general case for the following reasons:
  flonum
W16991 is general case for the following reasons:
  flonum
W16990 is general case for the following reasons:
  flonum
W15283 is general case for the following reasons:
  flonum
W15266 is general case for the following reasons:
  flonum
W15258 is general case for the following reasons:
  flonum
W15220 is general case for the following reasons:
  flonum
W14845 is general case for the following reasons:
  flonum
W9021 is general case for the following reasons:
  flonum
W7024 is general case for the following reasons:
  flonum
W2161 is general case for the following reasons:
  flonum
W1268 is general case for the following reasons:
  flonum
W1162 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
Generating code
In read[1357]
Argument to STRUCTURE-REF will not be a structure of the correct type
Running...
./bench: line 363: /tmp/larcenous/Stalin/maze: No such file or directory

real	0m0.000s
user	0m0.000s
sys	0m0.000s

Testing mazefun under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 17590 expressions
    15 internal symbol types
     1 external symbol type
    62 primitive procedure types
   172 non-called native procedure types
   412 called noop native procedure types
   826 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   143 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 20212 type sets
   664 hunoz variables
  1660 non-hunoz variables
   518 noop environments
  1661 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 27210 expressions
    15 internal symbol types
     1 external symbol type
    61 primitive procedure types
   222 non-called native procedure types
   560 called noop native procedure types
  1502 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   153 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 31074 type sets
   844 hunoz variables
  3032 non-hunoz variables
   678 noop environments
  2901 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 17189 expressions
    15 internal symbol types
     1 external symbol type
    61 primitive procedure types
   172 non-called native procedure types
   560 called noop native procedure types
  1502 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   153 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 20173 type sets
   656 hunoz variables
  2340 non-hunoz variables
     0 noop environments
  1828 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W30645 is general case for the following reasons:
  flonum
W27395 is general case for the following reasons:
  nondegenerate nonheaded vector
W16376 is general case for the following reasons:
  flonum
W16375 is general case for the following reasons:
  flonum
W16358 is general case for the following reasons:
  flonum
W15947 is general case for the following reasons:
  flonum
W15914 is general case for the following reasons:
  flonum
W15913 is general case for the following reasons:
  flonum
W15912 is general case for the following reasons:
  flonum
W14205 is general case for the following reasons:
  flonum
W14188 is general case for the following reasons:
  flonum
W14142 is general case for the following reasons:
  flonum
W13767 is general case for the following reasons:
  flonum
W8121 is general case for the following reasons:
  flonum
W108 is general case for the following reasons:
  flonum
W82 is general case for the following reasons:
  flonum
Generating code
In read[1048]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     2 -  8% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     5 - 25% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  2% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  5% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  1% - Determining which environments are recursive
     1 -  4% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     4 - 20% - Performing lightweight closure conversion
     1 -  4% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     1 -  3% - Determining which environments have external continuation calls
     1 -  6% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     2 -  8% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     1 -  3% - Generating code
     0 -  0% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  0% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running mazefun:11:11:10000
Elapsed time: 3.619999999995343387126922607421875 seconds (3.62000000000000010658141036401502788066864013671875) for mazefun:11:11:10000
+!CSVLINE!+stalin-unknown,mazefun:11:11:10000,3.619999999995343387126922607421875

real	0m3.623s
user	0m4.280s
sys	0m0.150s

Testing nqueens under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 17002 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   178 non-called native procedure types
   381 called noop native procedure types
   708 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   127 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19467 type sets
   644 hunoz variables
  1555 non-hunoz variables
   497 noop environments
  1612 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 25770 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   178 non-called native procedure types
   532 called noop native procedure types
  1401 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   131 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29379 type sets
   815 hunoz variables
  2806 non-hunoz variables
   648 noop environments
  2757 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 15696 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   178 non-called native procedure types
   532 called noop native procedure types
  1401 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   131 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 18429 type sets
   621 hunoz variables
  2124 non-hunoz variables
     0 noop environments
  1687 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29262 is general case for the following reasons:
  flonum
W26137 is general case for the following reasons:
  nondegenerate nonheaded vector
W15760 is general case for the following reasons:
  flonum
W15759 is general case for the following reasons:
  flonum
W15742 is general case for the following reasons:
  flonum
W15331 is general case for the following reasons:
  flonum
W15298 is general case for the following reasons:
  flonum
W15297 is general case for the following reasons:
  flonum
W15296 is general case for the following reasons:
  flonum
W13572 is general case for the following reasons:
  flonum
W13524 is general case for the following reasons:
  flonum
W13151 is general case for the following reasons:
  flonum
W1178 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
Generating code
In read[978]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     1 -  8% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     3 - 18% - Determining which call sites to split
     0 -  0% - Computing call graph
     1 -  4% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  8% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  2% - Determining which environments are recursive
     1 -  5% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     2 - 17% - Performing lightweight closure conversion
     1 -  5% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     0 -  2% - Determining which environments have external continuation calls
     1 -  6% - Determining blocked environments
     0 -  2% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  8% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     0 -  3% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running nqueens:13:10
Elapsed time: 4.620000000111758708953857421875 seconds (4.62000000000000010658141036401502788066864013671875) for nqueens:13:10
+!CSVLINE!+stalin-unknown,nqueens:13:10,4.620000000111758708953857421875

real	0m4.620s
user	0m4.620s
sys	0m0.000s

Testing paraffins under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 17594 expressions
    16 internal symbol types
     1 external symbol type
    60 primitive procedure types
   177 non-called native procedure types
   395 called noop native procedure types
   759 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   128 structure types
    18 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 20150 type sets
   662 hunoz variables
  1619 non-hunoz variables
   515 noop environments
  1679 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 7
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 26517 expressions
    16 internal symbol types
     1 external symbol type
    60 primitive procedure types
   177 non-called native procedure types
   546 called noop native procedure types
  1456 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   132 structure types
    18 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 30224 type sets
   833 hunoz variables
  2887 non-hunoz variables
   666 noop environments
  2849 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 7
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 16218 expressions
    16 internal symbol types
     1 external symbol type
    60 primitive procedure types
   177 non-called native procedure types
   546 called noop native procedure types
  1456 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   132 structure types
    18 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19033 type sets
   636 hunoz variables
  2192 non-hunoz variables
     0 noop environments
  1752 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 7
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W30058 is general case for the following reasons:
  flonum
W26851 is general case for the following reasons:
  nondegenerate nonheaded vector
W15940 is general case for the following reasons:
  flonum
W15939 is general case for the following reasons:
  flonum
W15922 is general case for the following reasons:
  flonum
W15511 is general case for the following reasons:
  flonum
W15478 is general case for the following reasons:
  flonum
W15477 is general case for the following reasons:
  flonum
W15476 is general case for the following reasons:
  flonum
W13752 is general case for the following reasons:
  flonum
W13331 is general case for the following reasons:
  flonum
W7647 is general case for the following reasons:
  flonum
W1256 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
Generating code
In read[1063]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     1 -  8% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     4 - 23% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  2% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  6% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  2% - Determining which environments are recursive
     1 -  7% - Determining which environments are reentrant
     0 -  1% - Asserting uniqueness
     3 - 19% - Performing lightweight closure conversion
     1 -  5% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     0 -  2% - Determining which environments have external continuation calls
     1 -  4% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  7% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     0 -  2% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running paraffins:23:10
Elapsed time: 1.630000000004656612873077392578125 seconds (1.62999999999999989341858963598497211933135986328125) for paraffins:23:10
+!CSVLINE!+stalin-unknown,paraffins:23:10,1.630000000004656612873077392578125

real	0m1.646s
user	0m1.817s
sys	0m0.080s

Testing parsing under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 21880 expressions
    38 internal symbol types
     1 external symbol type
    62 primitive procedure types
   182 non-called native procedure types
   485 called noop native procedure types
  1330 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     6 string types
   217 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 24946 type sets
   838 hunoz variables
  1782 non-hunoz variables
   583 noop environments
  2006 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 71803 expressions
    38 internal symbol types
     1 external symbol type
    62 primitive procedure types
   182 non-called native procedure types
   750 called noop native procedure types
  3801 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    17 string types
   345 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 78939 type sets
  1327 hunoz variables
  6125 non-hunoz variables
   849 noop environments
  5947 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 398
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 42859 expressions
    38 internal symbol types
     1 external symbol type
    62 primitive procedure types
   182 non-called native procedure types
   750 called noop native procedure types
  3801 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    17 string types
   345 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 49267 type sets
  1198 hunoz variables
  5526 non-hunoz variables
     0 noop environments
  4819 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 398
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W73897 is general case for the following reasons:
  flonum
W70351 is general case for the following reasons:
  nondegenerate nonheaded vector
W62422 is general case for the following reasons:
  flonum
W62421 is general case for the following reasons:
  flonum
W62420 is general case for the following reasons:
  flonum
W51964 is general case for the following reasons:
  flonum
W51963 is general case for the following reasons:
  flonum
W51946 is general case for the following reasons:
  flonum
W51535 is general case for the following reasons:
  flonum
W51502 is general case for the following reasons:
  flonum
W51501 is general case for the following reasons:
  flonum
W51500 is general case for the following reasons:
  flonum
W49776 is general case for the following reasons:
  flonum
W49768 is general case for the following reasons:
  flonum
W49730 is general case for the following reasons:
  flonum
W49371 is general case for the following reasons:
  flonum
W49355 is general case for the following reasons:
  flonum
W43996 is general case for the following reasons:
  flonum
W43990 is general case for the following reasons:
  flonum
W43550 is general case for the following reasons:
  flonum
W43549 is general case for the following reasons:
  flonum
W2733 is general case for the following reasons:
  flonum
W1328 is general case for the following reasons:
  flonum
W1 is general case for the following reasons:
  flonum
Generating code
In read[1454]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  0% - Expanding macros
     0 -  0% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  0% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     7 -  5% - Performing flow analysis
     0 -  0% - Enumerating call sites
     2 -  2% - Determining which types and type sets are used
    31 - 23% - Determining which call sites to split
     0 -  0% - Computing call graph
     4 -  3% - Determining which environments are called more than once
     1 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     6 -  4% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     1 -  1% - Determining which environments are recursive
     4 -  3% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
    10 -  8% - Performing lightweight closure conversion
    36 - 27% - Determining parents
     2 -  1% - Determining which expressions need conversion to CPS
     1 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     3 -  2% - Determining which environments have external continuation calls
     6 -  5% - Determining blocked environments
     1 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     8 -  6% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     6 -  5% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     1 -  1% - Generating code
     0 -  0% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  0% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running parsing:2500
Elapsed time: 8.780000000144354999065399169921875 seconds (8.7799999999999993605115378159098327159881591796875) for parsing:2500
+!CSVLINE!+stalin-unknown,parsing:2500,8.780000000144354999065399169921875

real	0m8.785s
user	0m8.850s
sys	0m0.013s

Testing peval under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
./bench: line 353: 24975 Killed                  ${STALIN} -On -Ob -Om -Or -Ot -d -d1 -k -copt -O3 $expanded
Running...
./bench: line 363: /tmp/larcenous/Stalin/peval: No such file or directory

real	0m0.000s
user	0m0.000s
sys	0m0.000s

Testing primes under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 16931 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   177 non-called native procedure types
   375 called noop native procedure types
   702 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   125 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19382 type sets
   640 hunoz variables
  1549 non-hunoz variables
   494 noop environments
  1605 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 25699 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   177 non-called native procedure types
   526 called noop native procedure types
  1395 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   129 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29294 type sets
   811 hunoz variables
  2800 non-hunoz variables
   645 noop environments
  2750 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 15685 expressions
    12 internal symbol types
     1 external symbol type
    60 primitive procedure types
   177 non-called native procedure types
   526 called noop native procedure types
  1395 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   129 structure types
    11 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 18406 type sets
   622 hunoz variables
  2115 non-hunoz variables
     0 noop environments
  1681 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W29181 is general case for the following reasons:
  flonum
W26066 is general case for the following reasons:
  nondegenerate nonheaded vector
W15751 is general case for the following reasons:
  flonum
W15750 is general case for the following reasons:
  flonum
W15733 is general case for the following reasons:
  flonum
W15322 is general case for the following reasons:
  flonum
W15289 is general case for the following reasons:
  flonum
W15288 is general case for the following reasons:
  flonum
W15287 is general case for the following reasons:
  flonum
W13580 is general case for the following reasons:
  flonum
W13563 is general case for the following reasons:
  flonum
W13517 is general case for the following reasons:
  flonum
W13515 is general case for the following reasons:
  flonum
W13142 is general case for the following reasons:
  flonum
W1178 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
Generating code
In read[968]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     1 -  9% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     3 - 21% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  3% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  7% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  2% - Determining which environments are recursive
     1 -  5% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     2 - 16% - Performing lightweight closure conversion
     1 -  5% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     0 -  3% - Determining which environments have external continuation calls
     1 -  4% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  8% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     0 -  3% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running primes:1000:10000
Elapsed time: 1.229999999864958226680755615234375 seconds (1.229999999999999982236431605997495353221893310546875) for primes:1000:10000
+!CSVLINE!+stalin-unknown,primes:1000:10000,1.229999999864958226680755615234375

real	0m1.237s
user	0m1.400s
sys	0m0.047s

Testing quicksort under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 17482 expressions
    12 internal symbol types
     1 external symbol type
    64 primitive procedure types
   180 non-called native procedure types
   396 called noop native procedure types
   789 called non-noop native procedure types
     0 foreign procedure types
     1 continuation type
     4 string types
   123 structure types
    14 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 20021 type sets
   668 hunoz variables
  1610 non-hunoz variables
   508 noop environments
  1669 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 26528 expressions
    12 internal symbol types
     1 external symbol type
    63 primitive procedure types
   217 non-called native procedure types
   543 called noop native procedure types
  1460 called non-noop native procedure types
     0 foreign procedure types
     1 continuation type
    14 string types
   131 structure types
    16 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 30261 type sets
   843 hunoz variables
  2909 non-hunoz variables
   663 noop environments
  2848 non-noop environments
4 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 16272 expressions
    12 internal symbol types
     1 external symbol type
    63 primitive procedure types
   180 non-called native procedure types
   543 called noop native procedure types
  1460 called non-noop native procedure types
     0 foreign procedure types
     1 continuation type
    14 string types
   131 structure types
    16 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19088 type sets
   651 hunoz variables
  2184 non-hunoz variables
     0 noop environments
  1754 non-noop environments
4 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W30092 is general case for the following reasons:
  flonum
W26887 is general case for the following reasons:
  nondegenerate nonheaded vector
W16047 is general case for the following reasons:
  flonum
W16046 is general case for the following reasons:
  flonum
W16029 is general case for the following reasons:
  flonum
W15618 is general case for the following reasons:
  flonum
W15585 is general case for the following reasons:
  flonum
W15584 is general case for the following reasons:
  flonum
W15583 is general case for the following reasons:
  flonum
W13813 is general case for the following reasons:
  flonum
W13811 is general case for the following reasons:
  flonum
W13565 is general case for the following reasons:
  flonum
W13438 is general case for the following reasons:
  flonum
W62 is general case for the following reasons:
  flonum
W59 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
Generating code
In read[1034]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     1 -  8% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     4 - 24% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  2% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  6% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  1% - Determining which environments are recursive
     1 -  4% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     3 - 17% - Performing lightweight closure conversion
     1 -  5% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     0 -  2% - Determining which environments have external continuation calls
     1 -  4% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  7% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     1 -  4% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running quicksort:10000:2500
Elapsed time: 2.57000000006519258022308349609375 seconds (2.569999999999999840127884453977458178997039794921875) for quicksort:10000:2500
+!CSVLINE!+stalin-unknown,quicksort:10000:2500,2.57000000006519258022308349609375

real	0m2.574s
user	0m2.863s
sys	0m0.063s

Testing scheme under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
./bench: line 353: 25706 Killed                  ${STALIN} -On -Ob -Om -Or -Ot -d -d1 -k -copt -O3 $expanded
Running...
./bench: line 363: /tmp/larcenous/Stalin/scheme: No such file or directory

real	0m0.000s
user	0m0.000s
sys	0m0.000s

Testing slatex under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
/tmp/larcenous/Stalin/slatex.exp:196:6436:Unbound variable
Running...
./bench: line 363: /tmp/larcenous/Stalin/slatex: No such file or directory

real	0m0.000s
user	0m0.000s
sys	0m0.000s

Testing nboyer under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
./bench: line 353: 25913 Killed                  ${STALIN} -On -Ob -Om -Or -Ot -d -d1 -k -copt -O3 $expanded
Running...
./bench: line 363: /tmp/larcenous/Stalin/nboyer: No such file or directory

real	0m0.000s
user	0m0.000s
sys	0m0.000s

Testing sboyer under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 22697 expressions
   134 internal symbol types
     1 external symbol type
    62 primitive procedure types
   175 non-called native procedure types
   421 called noop native procedure types
   906 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
  2079 structure types
    12 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29220 type sets
   698 hunoz variables
  1654 non-hunoz variables
   537 noop environments
  1795 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 32415 expressions
   134 internal symbol types
     1 external symbol type
    61 primitive procedure types
   202 non-called native procedure types
   569 called noop native procedure types
  1611 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
  2108 structure types
    12 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 40179 type sets
   878 hunoz variables
  2985 non-hunoz variables
   688 noop environments
  3028 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 22212 expressions
   134 internal symbol types
     1 external symbol type
    61 primitive procedure types
   177 non-called native procedure types
   569 called noop native procedure types
  1611 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
  2108 structure types
    12 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 29090 type sets
   680 hunoz variables
  2297 non-hunoz variables
     0 noop environments
  1936 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W35854 is general case for the following reasons:
  flonum
W32394 is general case for the following reasons:
  nondegenerate nonheaded vector
W26773 is general case for the following reasons:
  flonum
W16360 is general case for the following reasons:
  flonum
W16359 is general case for the following reasons:
  flonum
W16342 is general case for the following reasons:
  flonum
W15931 is general case for the following reasons:
  flonum
W15898 is general case for the following reasons:
  flonum
W15897 is general case for the following reasons:
  flonum
W15896 is general case for the following reasons:
  flonum
W14172 is general case for the following reasons:
  flonum
W14124 is general case for the following reasons:
  flonum
W13751 is general case for the following reasons:
  flonum
W1542 is general case for the following reasons:
  flonum
W120 is general case for the following reasons:
  flonum
Generating code
In read[1197]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  0% - Expanding macros
     1 -  0% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  0% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     8 -  4% - Performing flow analysis
     0 -  0% - Enumerating call sites
     1 -  1% - Determining which types and type sets are used
     4 -  2% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  0% - Determining which environments are called more than once
     0 -  0% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
    10 -  5% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  0% - Determining which environments are recursive
     1 -  0% - Determining which environments are reentrant
    52 - 28% - Asserting uniqueness
    57 - 31% - Performing lightweight closure conversion
     1 -  0% - Determining parents
    19 - 10% - Determining which expressions need conversion to CPS
     0 -  0% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     0 -  0% - Determining which environments have external continuation calls
     1 -  0% - Determining blocked environments
     0 -  0% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
    27 - 15% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  0% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     1 -  1% - Generating code
     0 -  0% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  0% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
Running sboyer:5:1
Elapsed time: 1.57000000006519258022308349609375 seconds (1.57000000000000010658141036401502788066864013671875) for sboyer:5:1
+!CSVLINE!+stalin-unknown,sboyer:5:1,1.57000000006519258022308349609375

real	0m1.576s
user	0m2.227s
sys	0m0.060s

Testing gcbench under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
/tmp/larcenous/Stalin/gcbench.exp:72:3049:Unbound variable
Running...
./bench: line 363: /tmp/larcenous/Stalin/gcbench: No such file or directory

real	0m0.000s
user	0m0.000s
sys	0m0.000s

Testing mperm under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 17392 expressions
    12 internal symbol types
     1 external symbol type
    63 primitive procedure types
   177 non-called native procedure types
   408 called noop native procedure types
   830 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   127 structure types
    12 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19920 type sets
   667 hunoz variables
  1594 non-hunoz variables
   514 noop environments
  1665 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 26494 expressions
    12 internal symbol types
     1 external symbol type
    63 primitive procedure types
   201 non-called native procedure types
   560 called noop native procedure types
  1520 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   131 structure types
    12 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 30201 type sets
   843 hunoz variables
  2885 non-hunoz variables
   670 noop environments
  2854 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 110
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 16711 expressions
    12 internal symbol types
     1 external symbol type
    63 primitive procedure types
   177 non-called native procedure types
   560 called noop native procedure types
  1520 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   131 structure types
    12 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19565 type sets
   678 hunoz variables
  2197 non-hunoz variables
     0 noop environments
  1814 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 110
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W30043 is general case for the following reasons:
  flonum
W26856 is general case for the following reasons:
  nondegenerate nonheaded vector
W24309 is general case for the following reasons:
  flonum
W16079 is general case for the following reasons:
  flonum
W16078 is general case for the following reasons:
  flonum
W16061 is general case for the following reasons:
  flonum
W15650 is general case for the following reasons:
  flonum
W15617 is general case for the following reasons:
  flonum
W15616 is general case for the following reasons:
  flonum
W15615 is general case for the following reasons:
  flonum
W13891 is general case for the following reasons:
  flonum
W13845 is general case for the following reasons:
  flonum
W13663 is general case for the following reasons:
  flonum
W13597 is general case for the following reasons:
  flonum
W13486 is general case for the following reasons:
  flonum
W13478 is general case for the following reasons:
  flonum
W13470 is general case for the following reasons:
  flonum
W689 is general case for the following reasons:
  flonum
W81 is general case for the following reasons:
  flonum
W18 is general case for the following reasons:
  flonum
W10 is general case for the following reasons:
  flonum
Generating code
In read[1051]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  0% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     1 -  9% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     3 - 22% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  2% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  6% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  2% - Determining which environments are recursive
     1 -  5% - Determining which environments are reentrant
     0 -  0% - Asserting uniqueness
     3 - 17% - Performing lightweight closure conversion
     1 -  5% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  1% - Determining which environments have external self tail calls
     0 -  2% - Determining which environments have external continuation calls
     1 -  4% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  9% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     0 -  3% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  1% - Generating C code
     0 -  1% - Writing database
     0 -  0% - Compiling C code
Running...
Running perm20:10:2:1
Elapsed time: 1.16899999999441206455230712890625e1 seconds (1.169000000000000039079850466805510222911834716796875e1) for perm20:10:2:1
+!CSVLINE!+stalin-unknown,perm20:10:2:1,1.16899999999441206455230712890625e1

real	0m13.299s
user	0m23.223s
sys	0m1.307s

Testing equal under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
Fast tree shake
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
In-lining first-order calls to primitive procedures
Annotating expressions with their parents
Annotating variables with their environments
Annotating expressions with their environments
Annotating variables with their references
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 17203 expressions
    13 internal symbol types
     1 external symbol type
    61 primitive procedure types
   176 non-called native procedure types
   385 called noop native procedure types
   736 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
     4 string types
   126 structure types
    15 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19711 type sets
   649 hunoz variables
  1591 non-hunoz variables
   502 noop environments
  1637 non-noop environments
0 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 1
Determining which call sites to split
Performing flow analysis
Enumerating call sites
Determining which types and type sets are used
 26411 expressions
    13 internal symbol types
     1 external symbol type
    61 primitive procedure types
   176 non-called native procedure types
   536 called noop native procedure types
  1470 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   152 structure types
    25 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 30166 type sets
   824 hunoz variables
  2906 non-hunoz variables
   653 noop environments
  2842 non-noop environments
13 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining which call sites to split
2 passes of flow analysis
Computing call graph
Determining which environments are called more than once
Determining which variables are referenced
Determining free variables
Determining necessarily-fictitious native procedure types
Annotating environments and continuation types
Inverting points-to relation
Determining escaping types
Determining which environments have unique call sites
Determining which environments are recursive
Determining which environments are reentrant
Asserting uniqueness
Performing lightweight closure conversion
Determining parents
Determining which expressions need conversion to CPS
 16422 expressions
    13 internal symbol types
     1 external symbol type
    61 primitive procedure types
   176 non-called native procedure types
   536 called noop native procedure types
  1470 called non-noop native procedure types
     0 foreign procedure types
     0 continuation types
    14 string types
   152 structure types
    25 headed vector types
     1 nonheaded vector type
     0 displaced vector types
 19304 type sets
   630 hunoz variables
  2227 non-hunoz variables
     0 noop environments
  1775 non-noop environments
13 call sites dispatch on clones
Maximal non-LET lexical nesting depth is 6
Maximal clone rate is 108
Determining environment distances from root
Determining which environments have external self tail calls
Determining which environments have external continuation calls
Determining blocked environments
Determining which environments need to pass parameters globally
Determining allocations
Applying closed-world assumption
Determining indirect structure types
Determining which types are never allocated on the heap
Determining which types are atomic
Determining which environments have regions
Determining which type sets are squeezable
Determining which type sets are squishable
Determining alignments
Assigning global squish tags
W26810 is general case for the following reasons:
  nondegenerate nonheaded vector
W16164 is general case for the following reasons:
  flonum
W16163 is general case for the following reasons:
  flonum
W16146 is general case for the following reasons:
  flonum
W15735 is general case for the following reasons:
  flonum
W15702 is general case for the following reasons:
  flonum
W15701 is general case for the following reasons:
  flonum
W15700 is general case for the following reasons:
  flonum
W13976 is general case for the following reasons:
  flonum
W13930 is general case for the following reasons:
  flonum
W13555 is general case for the following reasons:
  flonum
W712 is general case for the following reasons:
  flonum
W711 is general case for the following reasons:
  flonum
W68 is general case for the following reasons:
  flonum
W65 is general case for the following reasons:
  flonum
W63 is general case for the following reasons:
  flonum
W54 is general case for the following reasons:
  flonum
Generating code
In read[1016]
Argument to STRUCTURE-REF will not be a structure of the correct type
Removing unused declarations
Removing unused labels
Generating C code
Writing database
Compiling C code
Compilation time summary (in CPU seconds)
     0 -  1% - Reading source
     0 -  1% - Expanding macros
     0 -  2% - Fast tree shake
     0 -  0% - Annotating expressions with their parents
     0 -  0% - Annotating variables with their environments
     0 -  0% - Annotating expressions with their environments
     0 -  1% - In-lining first-order calls to primitive procedures
     0 -  0% - Annotating variables with their references
     2 - 13% - Performing flow analysis
     0 -  0% - Enumerating call sites
     0 -  1% - Determining which types and type sets are used
     2 - 15% - Determining which call sites to split
     0 -  0% - Computing call graph
     0 -  2% - Determining which environments are called more than once
     0 -  1% - Determining which variables are referenced
     0 -  0% - Determining free variables
     0 -  0% - Determining necessarily-fictitious native procedure types
     0 -  0% - Annotating environments and continuation types
     0 -  0% - Inverting points-to relation
     1 -  7% - Determining escaping types
     0 -  0% - Determining which environments have unique call sites
     0 -  2% - Determining which environments are recursive
     1 -  4% - Determining which environments are reentrant
     0 -  1% - Asserting uniqueness
     3 - 18% - Performing lightweight closure conversion
     1 -  4% - Determining parents
     0 -  2% - Determining which expressions need conversion to CPS
     0 -  1% - Determining environment distances from root
     0 -  0% - Determining which environments have external self tail calls
     0 -  2% - Determining which environments have external continuation calls
     1 -  5% - Determining blocked environments
     0 -  1% - Determining which environments need to pass parameters globally
     0 -  0% - Determining allocations
     1 -  9% - Applying closed-world assumption
     0 -  0% - Determining indirect structure types
     0 -  0% - Determining which types are never allocated on the heap
     0 -  0% - Determining which types are atomic
     0 -  1% - Determining which environments have regions
     0 -  0% - Determining which type sets are squeezable
     0 -  0% - Determining which type sets are squishable
     0 -  0% - Determining alignments
     0 -  0% - Assigning global squish tags
     1 -  3% - Generating code
     0 -  1% - Removing unused declarations
     0 -  0% - Removing unused labels
     0 -  1% - Generating C code
     0 -  0% - Writing database
     0 -  0% - Compiling C code
Running...
./bench: line 361: 26282 Killed                  "$exe" < "$2"

real	4m59.999s
user	4m59.973s
sys	0m0.000s

Testing bv2string under Stalin
Including prelude /home/nex/src/r7rs-benchmarks/src/Stalin-prelude.scm
Compiling...
Reading source
Expanding macros
/tmp/larcenous/Stalin/bv2string.exp:131:5553:Unbound variable
Running...
./bench: line 363: /tmp/larcenous/Stalin/bv2string: No such file or directory

real	0m0.000s
user	0m0.000s
sys	0m0.000s
